// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: election_contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Contracts.Election {

  /// <summary>Holder for reflection information generated from election_contract.proto</summary>
  internal static partial class ElectionContractReflection {

    #region Descriptor
    /// <summary>File descriptor for election_contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ElectionContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdlbGVjdGlvbl9jb250cmFjdC5wcm90bxIIRWxlY3Rpb24aD2FlbGYvY29y",
            "ZS5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxoeZ29v",
            "Z2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGhtnb29nbGUvcHJvdG9idWYv",
            "ZW1wdHkucHJvdG8aEmFlbGYvb3B0aW9ucy5wcm90bxoUYXV0aG9yaXR5X2lu",
            "Zm8ucHJvdG8ioQEKHEluaXRpYWxFbGVjdGlvbkNvbnRyYWN0SW5wdXQSGQoR",
            "bWluaW11bV9sb2NrX3RpbWUYASABKAMSGQoRbWF4aW11bV9sb2NrX3RpbWUY",
            "AiABKAMSEgoKbWluZXJfbGlzdBgDIAMoCRIWCg50aW1lX2VhY2hfdGVybRgE",
            "IAEoAxIfChdtaW5lcl9pbmNyZWFzZV9pbnRlcnZhbBgFIAEoAyIrChRHZXRU",
            "ZXJtU25hcHNob3RJbnB1dBITCgt0ZXJtX251bWJlchgBIAEoAyKNAQofVXBk",
            "YXRlQ2FuZGlkYXRlSW5mb3JtYXRpb25JbnB1dBIOCgZwdWJrZXkYASABKAkS",
            "IAoYcmVjZW50bHlfcHJvZHVjZWRfYmxvY2tzGAIgASgDEiIKGnJlY2VudGx5",
            "X21pc3NlZF90aW1lX3Nsb3RzGAMgASgDEhQKDGlzX2V2aWxfbm9kZRgEIAEo",
            "CCJjCidVcGRhdGVNdWx0aXBsZUNhbmRpZGF0ZUluZm9ybWF0aW9uSW5wdXQS",
            "OAoFdmFsdWUYASADKAsyKS5FbGVjdGlvbi5VcGRhdGVDYW5kaWRhdGVJbmZv",
            "cm1hdGlvbklucHV0IlwKGVRha2VFbGVjdGlvblNuYXBzaG90SW5wdXQSEwoL",
            "dGVybV9udW1iZXIYASABKAMSFAoMbWluZWRfYmxvY2tzGAIgASgDEhQKDHJv",
            "dW5kX251bWJlchgDIAEoAyKIAQoOVm90ZU1pbmVySW5wdXQSGAoQY2FuZGlk",
            "YXRlX3B1YmtleRgBIAEoCRIOCgZhbW91bnQYAiABKAMSMQoNZW5kX3RpbWVz",
            "dGFtcBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASGQoFdG9r",
            "ZW4YBCABKAsyCi5hZWxmLkhhc2giUAoXQ2hhbmdlVm90aW5nT3B0aW9uSW5w",
            "dXQSGwoHdm90ZV9pZBgBIAEoCzIKLmFlbGYuSGFzaBIYChBjYW5kaWRhdGVf",
            "cHVia2V5GAIgASgJIiwKFVVwZGF0ZVRlcm1OdW1iZXJJbnB1dBITCgt0ZXJt",
            "X251bWJlchgBIAEoAyItChZHZXRFbGVjdGlvblJlc3VsdElucHV0EhMKC3Rl",
            "cm1fbnVtYmVyGAEgASgDIqABCg5FbGVjdGlvblJlc3VsdBITCgt0ZXJtX251",
            "bWJlchgBIAEoAxI2CgdyZXN1bHRzGAIgAygLMiUuRWxlY3Rpb24uRWxlY3Rp",
            "b25SZXN1bHQuUmVzdWx0c0VudHJ5EhEKCWlzX2FjdGl2ZRgDIAEoCBouCgxS",
            "ZXN1bHRzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgDOgI4ASK/",
            "AgoLRWxlY3RvclZvdGUSLAoYYWN0aXZlX3ZvdGluZ19yZWNvcmRfaWRzGAEg",
            "AygLMgouYWVsZi5IYXNoEi8KG3dpdGhkcmF3bl92b3RpbmdfcmVjb3JkX2lk",
            "cxgCIAMoCzIKLmFlbGYuSGFzaBIhChlhY3RpdmVfdm90ZWRfdm90ZXNfYW1v",
            "dW50GAMgASgDEh4KFmFsbF92b3RlZF92b3Rlc19hbW91bnQYBCABKAMSPQoV",
            "YWN0aXZlX3ZvdGluZ19yZWNvcmRzGAUgAygLMh4uRWxlY3Rpb24uRWxlY3Rp",
            "b25Wb3RpbmdSZWNvcmQSPwoXd2l0aGRyYXduX3ZvdGVzX3JlY29yZHMYBiAD",
            "KAsyHi5FbGVjdGlvbi5FbGVjdGlvblZvdGluZ1JlY29yZBIOCgZwdWJrZXkY",
            "ByABKAwi9wIKDUNhbmRpZGF0ZVZvdGUSNQohb2J0YWluZWRfYWN0aXZlX3Zv",
            "dGluZ19yZWNvcmRfaWRzGAEgAygLMgouYWVsZi5IYXNoEjgKJG9idGFpbmVk",
            "X3dpdGhkcmF3bl92b3RpbmdfcmVjb3JkX2lkcxgCIAMoCzIKLmFlbGYuSGFz",
            "aBIqCiJvYnRhaW5lZF9hY3RpdmVfdm90ZWRfdm90ZXNfYW1vdW50GAMgASgD",
            "EicKH2FsbF9vYnRhaW5lZF92b3RlZF92b3Rlc19hbW91bnQYBCABKAMSRgoe",
            "b2J0YWluZWRfYWN0aXZlX3ZvdGluZ19yZWNvcmRzGAUgAygLMh4uRWxlY3Rp",
            "b24uRWxlY3Rpb25Wb3RpbmdSZWNvcmQSSAogb2J0YWluZWRfd2l0aGRyYXdu",
            "X3ZvdGVzX3JlY29yZHMYBiADKAsyHi5FbGVjdGlvbi5FbGVjdGlvblZvdGlu",
            "Z1JlY29yZBIOCgZwdWJrZXkYByABKAwi3QEKFENhbmRpZGF0ZUluZm9ybWF0",
            "aW9uEg4KBnB1YmtleRgBIAEoCRINCgV0ZXJtcxgCIAMoAxIXCg9wcm9kdWNl",
            "ZF9ibG9ja3MYAyABKAMSGQoRbWlzc2VkX3RpbWVfc2xvdHMYBCABKAMSIwob",
            "Y29udGludWFsX2FwcG9pbnRtZW50X2NvdW50GAUgASgDEi8KG2Fubm91bmNl",
            "bWVudF90cmFuc2FjdGlvbl9pZBgGIAEoCzIKLmFlbGYuSGFzaBIcChRpc19j",
            "dXJyZW50X2NhbmRpZGF0ZRgHIAEoCCJvCg9DYW5kaWRhdGVEZXRhaWwSPQoV",
            "Y2FuZGlkYXRlX2luZm9ybWF0aW9uGAEgASgLMh4uRWxlY3Rpb24uQ2FuZGlk",
            "YXRlSW5mb3JtYXRpb24SHQoVb2J0YWluZWRfdm90ZXNfYW1vdW50GAIgASgD",
            "Iv4CChRFbGVjdGlvblZvdGluZ1JlY29yZBIcCgV2b3RlchgBIAEoCzINLmFl",
            "bGYuQWRkcmVzcxIRCgljYW5kaWRhdGUYAiABKAkSDgoGYW1vdW50GAMgASgD",
            "EhMKC3Rlcm1fbnVtYmVyGAQgASgDEhsKB3ZvdGVfaWQYBSABKAsyCi5hZWxm",
            "Lkhhc2gSEQoJbG9ja190aW1lGAYgASgDEjQKEHVubG9ja190aW1lc3RhbXAY",
            "ByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjYKEndpdGhkcmF3",
            "X3RpbWVzdGFtcBgIIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "MgoOdm90ZV90aW1lc3RhbXAYCSABKAsyGi5nb29nbGUucHJvdG9idWYuVGlt",
            "ZXN0YW1wEhQKDGlzX3dpdGhkcmF3bhgKIAEoCBIOCgZ3ZWlnaHQYCyABKAMS",
            "GAoQaXNfY2hhbmdlX3RhcmdldBgMIAEoCCIwCg9QYWdlSW5mb3JtYXRpb24S",
            "DQoFc3RhcnQYASABKAUSDgoGbGVuZ3RoGAIgASgFIhsKClB1YmtleUxpc3QS",
            "DQoFdmFsdWUYASADKAwiugEKDFRlcm1TbmFwc2hvdBIYChBlbmRfcm91bmRf",
            "bnVtYmVyGAEgASgDEhQKDG1pbmVkX2Jsb2NrcxgCIAEoAxJDCg9lbGVjdGlv",
            "bl9yZXN1bHQYAyADKAsyKi5FbGVjdGlvbi5UZXJtU25hcHNob3QuRWxlY3Rp",
            "b25SZXN1bHRFbnRyeRo1ChNFbGVjdGlvblJlc3VsdEVudHJ5EgsKA2tleRgB",
            "IAEoCRINCgV2YWx1ZRgCIAEoAzoCOAEiLgoWVXBkYXRlTWluZXJzQ291bnRJ",
            "bnB1dBIUCgxtaW5lcnNfY291bnQYASABKAUiUQolR2V0UGFnZWFibGVDYW5k",
            "aWRhdGVJbmZvcm1hdGlvbk91dHB1dBIoCgV2YWx1ZRgBIAMoCzIZLkVsZWN0",
            "aW9uLkNhbmRpZGF0ZURldGFpbCLWAQoZU2V0VHJlYXN1cnlTY2hlbWVJZHNJ",
            "bnB1dBIhCg10cmVhc3VyeV9oYXNoGAEgASgLMgouYWVsZi5IYXNoEiAKDHdl",
            "bGZhcmVfaGFzaBgCIAEoCzIKLmFlbGYuSGFzaBIgCgxzdWJzaWR5X2hhc2gY",
            "AyABKAsyCi5hZWxmLkhhc2gSJQoRdm90ZXNfcmV3YXJkX2hhc2gYBCABKAsy",
            "Ci5hZWxmLkhhc2gSKwoXcmVfZWxlY3Rpb25fcmV3YXJkX2hhc2gYBSABKAsy",
            "Ci5hZWxmLkhhc2giqgEKFURhdGFDZW50ZXJSYW5raW5nTGlzdBJGCgxkYXRh",
            "X2NlbnRlcnMYASADKAsyMC5FbGVjdGlvbi5EYXRhQ2VudGVyUmFua2luZ0xp",
            "c3QuRGF0YUNlbnRlcnNFbnRyeRIVCg1taW5pbXVtX3ZvdGVzGAIgASgDGjIK",
            "EERhdGFDZW50ZXJzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgD",
            "OgI4ASJEChJWb3RlV2VpZ2h0SW50ZXJlc3QSCwoDZGF5GAEgASgFEhAKCGlu",
            "dGVyZXN0GAIgASgFEg8KB2NhcGl0YWwYAyABKAUiWgoWVm90ZVdlaWdodElu",
            "dGVyZXN0TGlzdBJAChp2b3RlX3dlaWdodF9pbnRlcmVzdF9pbmZvcxgBIAMo",
            "CzIcLkVsZWN0aW9uLlZvdGVXZWlnaHRJbnRlcmVzdCJKChRWb3RlV2VpZ2h0",
            "UHJvcG9ydGlvbhIXCg90aW1lX3Byb3BvcnRpb24YASABKAUSGQoRYW1vdW50",
            "X3Byb3BvcnRpb24YAiABKAUiNAoPVm90ZUluZm9ybWF0aW9uEg4KBmFtb3Vu",
            "dBgBIAEoAxIRCglsb2NrX3RpbWUYAiABKAMiQQojR2V0TWluZXJSZXBsYWNl",
            "bWVudEluZm9ybWF0aW9uSW5wdXQSGgoSY3VycmVudF9taW5lcl9saXN0GAEg",
            "AygJImAKG01pbmVyUmVwbGFjZW1lbnRJbmZvcm1hdGlvbhIlCh1hbHRlcm5h",
            "dGl2ZV9jYW5kaWRhdGVfcHVia2V5cxgBIAMoCRIaChJldmlsX21pbmVyX3B1",
            "YmtleXMYAiADKAkiKQoRRXZpbE1pbmVyRGV0ZWN0ZWQSDgoGcHVia2V5GAEg",
            "ASgJOgSguxgBMs4ZChBFbGVjdGlvbkNvbnRyYWN0ElsKF0luaXRpYWxFbGVj",
            "dGlvbkNvbnRyYWN0EiYuRWxlY3Rpb24uSW5pdGlhbEVsZWN0aW9uQ29udHJh",
            "Y3RJbnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEk8KG1JlZ2lzdGVy",
            "RWxlY3Rpb25Wb3RpbmdFdmVudBIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoW",
            "Lmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEk0KDFRha2VTbmFwc2hvdBIjLkVs",
            "ZWN0aW9uLlRha2VFbGVjdGlvblNuYXBzaG90SW5wdXQaFi5nb29nbGUucHJv",
            "dG9idWYuRW1wdHkiABJEChBBbm5vdW5jZUVsZWN0aW9uEhYuZ29vZ2xlLnBy",
            "b3RvYnVmLkVtcHR5GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASQAoMUXVp",
            "dEVsZWN0aW9uEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GhYuZ29vZ2xlLnBy",
            "b3RvYnVmLkVtcHR5IgASLgoEVm90ZRIYLkVsZWN0aW9uLlZvdGVNaW5lcklu",
            "cHV0GgouYWVsZi5IYXNoIgASUQoSQ2hhbmdlVm90aW5nT3B0aW9uEiEuRWxl",
            "Y3Rpb24uQ2hhbmdlVm90aW5nT3B0aW9uSW5wdXQaFi5nb29nbGUucHJvdG9i",
            "dWYuRW1wdHkiABIwCghXaXRoZHJhdxIKLmFlbGYuSGFzaBoWLmdvb2dsZS5w",
            "cm90b2J1Zi5FbXB0eSIAEmEKGlVwZGF0ZUNhbmRpZGF0ZUluZm9ybWF0aW9u",
            "EikuRWxlY3Rpb24uVXBkYXRlQ2FuZGlkYXRlSW5mb3JtYXRpb25JbnB1dBoW",
            "Lmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEnEKIlVwZGF0ZU11bHRpcGxlQ2Fu",
            "ZGlkYXRlSW5mb3JtYXRpb24SMS5FbGVjdGlvbi5VcGRhdGVNdWx0aXBsZUNh",
            "bmRpZGF0ZUluZm9ybWF0aW9uSW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1w",
            "dHkiABJPChFVcGRhdGVNaW5lcnNDb3VudBIgLkVsZWN0aW9uLlVwZGF0ZU1p",
            "bmVyc0NvdW50SW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJVChRT",
            "ZXRUcmVhc3VyeVNjaGVtZUlkcxIjLkVsZWN0aW9uLlNldFRyZWFzdXJ5U2No",
            "ZW1lSWRzSW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJTChVTZXRW",
            "b3RlV2VpZ2h0SW50ZXJlc3QSIC5FbGVjdGlvbi5Wb3RlV2VpZ2h0SW50ZXJl",
            "c3RMaXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASUwoXU2V0Vm90ZVdl",
            "aWdodFByb3BvcnRpb24SHi5FbGVjdGlvbi5Wb3RlV2VpZ2h0UHJvcG9ydGlv",
            "bhoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEk4KIkNoYW5nZVZvdGVXZWln",
            "aHRJbnRlcmVzdENvbnRyb2xsZXISDi5BdXRob3JpdHlJbmZvGhYuZ29vZ2xl",
            "LnByb3RvYnVmLkVtcHR5IgASRAoNR2V0Q2FuZGlkYXRlcxIWLmdvb2dsZS5w",
            "cm90b2J1Zi5FbXB0eRoULkVsZWN0aW9uLlB1YmtleUxpc3QiBYiJ9wEBEkkK",
            "EkdldFZvdGVkQ2FuZGlkYXRlcxIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoU",
            "LkVsZWN0aW9uLlB1YmtleUxpc3QiBYiJ9wEBEl4KF0dldENhbmRpZGF0ZUlu",
            "Zm9ybWF0aW9uEhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlGh4uRWxl",
            "Y3Rpb24uQ2FuZGlkYXRlSW5mb3JtYXRpb24iBYiJ9wEBEkMKDEdldFZpY3Rv",
            "cmllcxIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoULkVsZWN0aW9uLlB1Ymtl",
            "eUxpc3QiBYiJ9wEBElAKD0dldFRlcm1TbmFwc2hvdBIeLkVsZWN0aW9uLkdl",
            "dFRlcm1TbmFwc2hvdElucHV0GhYuRWxlY3Rpb24uVGVybVNuYXBzaG90IgWI",
            "ifcBARJMCg5HZXRNaW5lcnNDb3VudBIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0",
            "eRobLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlIgWIifcBARJWChFHZXRF",
            "bGVjdGlvblJlc3VsdBIgLkVsZWN0aW9uLkdldEVsZWN0aW9uUmVzdWx0SW5w",
            "dXQaGC5FbGVjdGlvbi5FbGVjdGlvblJlc3VsdCIFiIn3AQESTAoOR2V0RWxl",
            "Y3RvclZvdGUSHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUaFS5FbGVj",
            "dGlvbi5FbGVjdG9yVm90ZSIFiIn3AQESVwoZR2V0RWxlY3RvclZvdGVXaXRo",
            "UmVjb3JkcxIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRoVLkVsZWN0",
            "aW9uLkVsZWN0b3JWb3RlIgWIifcBARJaChxHZXRFbGVjdG9yVm90ZVdpdGhB",
            "bGxSZWNvcmRzEhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlGhUuRWxl",
            "Y3Rpb24uRWxlY3RvclZvdGUiBYiJ9wEBElAKEEdldENhbmRpZGF0ZVZvdGUS",
            "HC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUaFy5FbGVjdGlvbi5DYW5k",
            "aWRhdGVWb3RlIgWIifcBARJbChtHZXRDYW5kaWRhdGVWb3RlV2l0aFJlY29y",
            "ZHMSHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUaFy5FbGVjdGlvbi5D",
            "YW5kaWRhdGVWb3RlIgWIifcBARJeCh5HZXRDYW5kaWRhdGVWb3RlV2l0aEFs",
            "bFJlY29yZHMSHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUaFy5FbGVj",
            "dGlvbi5DYW5kaWRhdGVWb3RlIgWIifcBARJMCg5HZXRWb3RlcnNDb3VudBIW",
            "Lmdvb2dsZS5wcm90b2J1Zi5FbXB0eRobLmdvb2dsZS5wcm90b2J1Zi5JbnQ2",
            "NFZhbHVlIgWIifcBARJMCg5HZXRWb3Rlc0Ftb3VudBIWLmdvb2dsZS5wcm90",
            "b2J1Zi5FbXB0eRobLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlIgWIifcB",
            "ARJ0Ch9HZXRQYWdlYWJsZUNhbmRpZGF0ZUluZm9ybWF0aW9uEhkuRWxlY3Rp",
            "b24uUGFnZUluZm9ybWF0aW9uGi8uRWxlY3Rpb24uR2V0UGFnZWFibGVDYW5k",
            "aWRhdGVJbmZvcm1hdGlvbk91dHB1dCIFiIn3AQESSQocR2V0TWluZXJFbGVj",
            "dGlvblZvdGluZ0l0ZW1JZBIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoKLmFl",
            "bGYuSGFzaCIFiIn3AQESWgoYR2V0RGF0YUNlbnRlclJhbmtpbmdMaXN0EhYu",
            "Z29vZ2xlLnByb3RvYnVmLkVtcHR5Gh8uRWxlY3Rpb24uRGF0YUNlbnRlclJh",
            "bmtpbmdMaXN0IgWIifcBARJXChRHZXRWb3RlV2VpZ2h0U2V0dGluZxIWLmdv",
            "b2dsZS5wcm90b2J1Zi5FbXB0eRogLkVsZWN0aW9uLlZvdGVXZWlnaHRJbnRl",
            "cmVzdExpc3QiBYiJ9wEBElgKF0dldFZvdGVXZWlnaHRQcm9wb3J0aW9uEhYu",
            "Z29vZ2xlLnByb3RvYnVmLkVtcHR5Gh4uRWxlY3Rpb24uVm90ZVdlaWdodFBy",
            "b3BvcnRpb24iBYiJ9wEBElcKFkdldENhbGN1bGF0ZVZvdGVXZWlnaHQSGS5F",
            "bGVjdGlvbi5Wb3RlSW5mb3JtYXRpb24aGy5nb29nbGUucHJvdG9idWYuSW50",
            "NjRWYWx1ZSIFiIn3AQESUAofR2V0Vm90ZVdlaWdodEludGVyZXN0Q29udHJv",
            "bGxlchIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoOLkF1dGhvcml0eUluZm8i",
            "BYiJ9wEBEn0KHkdldE1pbmVyUmVwbGFjZW1lbnRJbmZvcm1hdGlvbhItLkVs",
            "ZWN0aW9uLkdldE1pbmVyUmVwbGFjZW1lbnRJbmZvcm1hdGlvbklucHV0GiUu",
            "RWxlY3Rpb24uTWluZXJSZXBsYWNlbWVudEluZm9ybWF0aW9uIgWIifcBARoy",
            "ssz2AS1BRWxmLkNvbnRyYWN0cy5FbGVjdGlvbi5FbGVjdGlvbkNvbnRyYWN0",
            "U3RhdGVCGqoCF0FFbGYuQ29udHJhY3RzLkVsZWN0aW9uYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.Types.CoreReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::AElf.OptionsReflection.Descriptor, global::AuthorityInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.InitialElectionContractInput), global::AElf.Contracts.Election.InitialElectionContractInput.Parser, new[]{ "MinimumLockTime", "MaximumLockTime", "MinerList", "TimeEachTerm", "MinerIncreaseInterval" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.GetTermSnapshotInput), global::AElf.Contracts.Election.GetTermSnapshotInput.Parser, new[]{ "TermNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.UpdateCandidateInformationInput), global::AElf.Contracts.Election.UpdateCandidateInformationInput.Parser, new[]{ "Pubkey", "RecentlyProducedBlocks", "RecentlyMissedTimeSlots", "IsEvilNode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.UpdateMultipleCandidateInformationInput), global::AElf.Contracts.Election.UpdateMultipleCandidateInformationInput.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.TakeElectionSnapshotInput), global::AElf.Contracts.Election.TakeElectionSnapshotInput.Parser, new[]{ "TermNumber", "MinedBlocks", "RoundNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.VoteMinerInput), global::AElf.Contracts.Election.VoteMinerInput.Parser, new[]{ "CandidatePubkey", "Amount", "EndTimestamp", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.ChangeVotingOptionInput), global::AElf.Contracts.Election.ChangeVotingOptionInput.Parser, new[]{ "VoteId", "CandidatePubkey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.UpdateTermNumberInput), global::AElf.Contracts.Election.UpdateTermNumberInput.Parser, new[]{ "TermNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.GetElectionResultInput), global::AElf.Contracts.Election.GetElectionResultInput.Parser, new[]{ "TermNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.ElectionResult), global::AElf.Contracts.Election.ElectionResult.Parser, new[]{ "TermNumber", "Results", "IsActive" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.ElectorVote), global::AElf.Contracts.Election.ElectorVote.Parser, new[]{ "ActiveVotingRecordIds", "WithdrawnVotingRecordIds", "ActiveVotedVotesAmount", "AllVotedVotesAmount", "ActiveVotingRecords", "WithdrawnVotesRecords", "Pubkey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.CandidateVote), global::AElf.Contracts.Election.CandidateVote.Parser, new[]{ "ObtainedActiveVotingRecordIds", "ObtainedWithdrawnVotingRecordIds", "ObtainedActiveVotedVotesAmount", "AllObtainedVotedVotesAmount", "ObtainedActiveVotingRecords", "ObtainedWithdrawnVotesRecords", "Pubkey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.CandidateInformation), global::AElf.Contracts.Election.CandidateInformation.Parser, new[]{ "Pubkey", "Terms", "ProducedBlocks", "MissedTimeSlots", "ContinualAppointmentCount", "AnnouncementTransactionId", "IsCurrentCandidate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.CandidateDetail), global::AElf.Contracts.Election.CandidateDetail.Parser, new[]{ "CandidateInformation", "ObtainedVotesAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.ElectionVotingRecord), global::AElf.Contracts.Election.ElectionVotingRecord.Parser, new[]{ "Voter", "Candidate", "Amount", "TermNumber", "VoteId", "LockTime", "UnlockTimestamp", "WithdrawTimestamp", "VoteTimestamp", "IsWithdrawn", "Weight", "IsChangeTarget" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.PageInformation), global::AElf.Contracts.Election.PageInformation.Parser, new[]{ "Start", "Length" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.PubkeyList), global::AElf.Contracts.Election.PubkeyList.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.TermSnapshot), global::AElf.Contracts.Election.TermSnapshot.Parser, new[]{ "EndRoundNumber", "MinedBlocks", "ElectionResult" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.UpdateMinersCountInput), global::AElf.Contracts.Election.UpdateMinersCountInput.Parser, new[]{ "MinersCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.GetPageableCandidateInformationOutput), global::AElf.Contracts.Election.GetPageableCandidateInformationOutput.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.SetTreasurySchemeIdsInput), global::AElf.Contracts.Election.SetTreasurySchemeIdsInput.Parser, new[]{ "TreasuryHash", "WelfareHash", "SubsidyHash", "VotesRewardHash", "ReElectionRewardHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.DataCenterRankingList), global::AElf.Contracts.Election.DataCenterRankingList.Parser, new[]{ "DataCenters", "MinimumVotes" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.VoteWeightInterest), global::AElf.Contracts.Election.VoteWeightInterest.Parser, new[]{ "Day", "Interest", "Capital" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.VoteWeightInterestList), global::AElf.Contracts.Election.VoteWeightInterestList.Parser, new[]{ "VoteWeightInterestInfos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.VoteWeightProportion), global::AElf.Contracts.Election.VoteWeightProportion.Parser, new[]{ "TimeProportion", "AmountProportion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.VoteInformation), global::AElf.Contracts.Election.VoteInformation.Parser, new[]{ "Amount", "LockTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.GetMinerReplacementInformationInput), global::AElf.Contracts.Election.GetMinerReplacementInformationInput.Parser, new[]{ "CurrentMinerList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.MinerReplacementInformation), global::AElf.Contracts.Election.MinerReplacementInformation.Parser, new[]{ "AlternativeCandidatePubkeys", "EvilMinerPubkeys" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Election.EvilMinerDetected), global::AElf.Contracts.Election.EvilMinerDetected.Parser, new[]{ "Pubkey" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class InitialElectionContractInput : pb::IMessage<InitialElectionContractInput> {
    private static readonly pb::MessageParser<InitialElectionContractInput> _parser = new pb::MessageParser<InitialElectionContractInput>(() => new InitialElectionContractInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitialElectionContractInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialElectionContractInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialElectionContractInput(InitialElectionContractInput other) : this() {
      minimumLockTime_ = other.minimumLockTime_;
      maximumLockTime_ = other.maximumLockTime_;
      minerList_ = other.minerList_.Clone();
      timeEachTerm_ = other.timeEachTerm_;
      minerIncreaseInterval_ = other.minerIncreaseInterval_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialElectionContractInput Clone() {
      return new InitialElectionContractInput(this);
    }

    /// <summary>Field number for the "minimum_lock_time" field.</summary>
    public const int MinimumLockTimeFieldNumber = 1;
    private long minimumLockTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MinimumLockTime {
      get { return minimumLockTime_; }
      set {
        minimumLockTime_ = value;
      }
    }

    /// <summary>Field number for the "maximum_lock_time" field.</summary>
    public const int MaximumLockTimeFieldNumber = 2;
    private long maximumLockTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaximumLockTime {
      get { return maximumLockTime_; }
      set {
        maximumLockTime_ = value;
      }
    }

    /// <summary>Field number for the "miner_list" field.</summary>
    public const int MinerListFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_minerList_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> minerList_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MinerList {
      get { return minerList_; }
    }

    /// <summary>Field number for the "time_each_term" field.</summary>
    public const int TimeEachTermFieldNumber = 4;
    private long timeEachTerm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TimeEachTerm {
      get { return timeEachTerm_; }
      set {
        timeEachTerm_ = value;
      }
    }

    /// <summary>Field number for the "miner_increase_interval" field.</summary>
    public const int MinerIncreaseIntervalFieldNumber = 5;
    private long minerIncreaseInterval_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MinerIncreaseInterval {
      get { return minerIncreaseInterval_; }
      set {
        minerIncreaseInterval_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitialElectionContractInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitialElectionContractInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MinimumLockTime != other.MinimumLockTime) return false;
      if (MaximumLockTime != other.MaximumLockTime) return false;
      if(!minerList_.Equals(other.minerList_)) return false;
      if (TimeEachTerm != other.TimeEachTerm) return false;
      if (MinerIncreaseInterval != other.MinerIncreaseInterval) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MinimumLockTime != 0L) hash ^= MinimumLockTime.GetHashCode();
      if (MaximumLockTime != 0L) hash ^= MaximumLockTime.GetHashCode();
      hash ^= minerList_.GetHashCode();
      if (TimeEachTerm != 0L) hash ^= TimeEachTerm.GetHashCode();
      if (MinerIncreaseInterval != 0L) hash ^= MinerIncreaseInterval.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MinimumLockTime != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MinimumLockTime);
      }
      if (MaximumLockTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MaximumLockTime);
      }
      minerList_.WriteTo(output, _repeated_minerList_codec);
      if (TimeEachTerm != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TimeEachTerm);
      }
      if (MinerIncreaseInterval != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(MinerIncreaseInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MinimumLockTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumLockTime);
      }
      if (MaximumLockTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaximumLockTime);
      }
      size += minerList_.CalculateSize(_repeated_minerList_codec);
      if (TimeEachTerm != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeEachTerm);
      }
      if (MinerIncreaseInterval != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinerIncreaseInterval);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitialElectionContractInput other) {
      if (other == null) {
        return;
      }
      if (other.MinimumLockTime != 0L) {
        MinimumLockTime = other.MinimumLockTime;
      }
      if (other.MaximumLockTime != 0L) {
        MaximumLockTime = other.MaximumLockTime;
      }
      minerList_.Add(other.minerList_);
      if (other.TimeEachTerm != 0L) {
        TimeEachTerm = other.TimeEachTerm;
      }
      if (other.MinerIncreaseInterval != 0L) {
        MinerIncreaseInterval = other.MinerIncreaseInterval;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MinimumLockTime = input.ReadInt64();
            break;
          }
          case 16: {
            MaximumLockTime = input.ReadInt64();
            break;
          }
          case 26: {
            minerList_.AddEntriesFrom(input, _repeated_minerList_codec);
            break;
          }
          case 32: {
            TimeEachTerm = input.ReadInt64();
            break;
          }
          case 40: {
            MinerIncreaseInterval = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class GetTermSnapshotInput : pb::IMessage<GetTermSnapshotInput> {
    private static readonly pb::MessageParser<GetTermSnapshotInput> _parser = new pb::MessageParser<GetTermSnapshotInput>(() => new GetTermSnapshotInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTermSnapshotInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTermSnapshotInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTermSnapshotInput(GetTermSnapshotInput other) : this() {
      termNumber_ = other.termNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTermSnapshotInput Clone() {
      return new GetTermSnapshotInput(this);
    }

    /// <summary>Field number for the "term_number" field.</summary>
    public const int TermNumberFieldNumber = 1;
    private long termNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TermNumber {
      get { return termNumber_; }
      set {
        termNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTermSnapshotInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTermSnapshotInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TermNumber != other.TermNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TermNumber != 0L) hash ^= TermNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TermNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TermNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TermNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TermNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTermSnapshotInput other) {
      if (other == null) {
        return;
      }
      if (other.TermNumber != 0L) {
        TermNumber = other.TermNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TermNumber = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UpdateCandidateInformationInput : pb::IMessage<UpdateCandidateInformationInput> {
    private static readonly pb::MessageParser<UpdateCandidateInformationInput> _parser = new pb::MessageParser<UpdateCandidateInformationInput>(() => new UpdateCandidateInformationInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateCandidateInformationInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCandidateInformationInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCandidateInformationInput(UpdateCandidateInformationInput other) : this() {
      pubkey_ = other.pubkey_;
      recentlyProducedBlocks_ = other.recentlyProducedBlocks_;
      recentlyMissedTimeSlots_ = other.recentlyMissedTimeSlots_;
      isEvilNode_ = other.isEvilNode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCandidateInformationInput Clone() {
      return new UpdateCandidateInformationInput(this);
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 1;
    private string pubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recently_produced_blocks" field.</summary>
    public const int RecentlyProducedBlocksFieldNumber = 2;
    private long recentlyProducedBlocks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RecentlyProducedBlocks {
      get { return recentlyProducedBlocks_; }
      set {
        recentlyProducedBlocks_ = value;
      }
    }

    /// <summary>Field number for the "recently_missed_time_slots" field.</summary>
    public const int RecentlyMissedTimeSlotsFieldNumber = 3;
    private long recentlyMissedTimeSlots_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RecentlyMissedTimeSlots {
      get { return recentlyMissedTimeSlots_; }
      set {
        recentlyMissedTimeSlots_ = value;
      }
    }

    /// <summary>Field number for the "is_evil_node" field.</summary>
    public const int IsEvilNodeFieldNumber = 4;
    private bool isEvilNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsEvilNode {
      get { return isEvilNode_; }
      set {
        isEvilNode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateCandidateInformationInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateCandidateInformationInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pubkey != other.Pubkey) return false;
      if (RecentlyProducedBlocks != other.RecentlyProducedBlocks) return false;
      if (RecentlyMissedTimeSlots != other.RecentlyMissedTimeSlots) return false;
      if (IsEvilNode != other.IsEvilNode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (RecentlyProducedBlocks != 0L) hash ^= RecentlyProducedBlocks.GetHashCode();
      if (RecentlyMissedTimeSlots != 0L) hash ^= RecentlyMissedTimeSlots.GetHashCode();
      if (IsEvilNode != false) hash ^= IsEvilNode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pubkey);
      }
      if (RecentlyProducedBlocks != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RecentlyProducedBlocks);
      }
      if (RecentlyMissedTimeSlots != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(RecentlyMissedTimeSlots);
      }
      if (IsEvilNode != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsEvilNode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pubkey);
      }
      if (RecentlyProducedBlocks != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RecentlyProducedBlocks);
      }
      if (RecentlyMissedTimeSlots != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RecentlyMissedTimeSlots);
      }
      if (IsEvilNode != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateCandidateInformationInput other) {
      if (other == null) {
        return;
      }
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      if (other.RecentlyProducedBlocks != 0L) {
        RecentlyProducedBlocks = other.RecentlyProducedBlocks;
      }
      if (other.RecentlyMissedTimeSlots != 0L) {
        RecentlyMissedTimeSlots = other.RecentlyMissedTimeSlots;
      }
      if (other.IsEvilNode != false) {
        IsEvilNode = other.IsEvilNode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pubkey = input.ReadString();
            break;
          }
          case 16: {
            RecentlyProducedBlocks = input.ReadInt64();
            break;
          }
          case 24: {
            RecentlyMissedTimeSlots = input.ReadInt64();
            break;
          }
          case 32: {
            IsEvilNode = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UpdateMultipleCandidateInformationInput : pb::IMessage<UpdateMultipleCandidateInformationInput> {
    private static readonly pb::MessageParser<UpdateMultipleCandidateInformationInput> _parser = new pb::MessageParser<UpdateMultipleCandidateInformationInput>(() => new UpdateMultipleCandidateInformationInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateMultipleCandidateInformationInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMultipleCandidateInformationInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMultipleCandidateInformationInput(UpdateMultipleCandidateInformationInput other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMultipleCandidateInformationInput Clone() {
      return new UpdateMultipleCandidateInformationInput(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Contracts.Election.UpdateCandidateInformationInput> _repeated_value_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Contracts.Election.UpdateCandidateInformationInput.Parser);
    private readonly pbc::RepeatedField<global::AElf.Contracts.Election.UpdateCandidateInformationInput> value_ = new pbc::RepeatedField<global::AElf.Contracts.Election.UpdateCandidateInformationInput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Contracts.Election.UpdateCandidateInformationInput> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateMultipleCandidateInformationInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateMultipleCandidateInformationInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateMultipleCandidateInformationInput other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class TakeElectionSnapshotInput : pb::IMessage<TakeElectionSnapshotInput> {
    private static readonly pb::MessageParser<TakeElectionSnapshotInput> _parser = new pb::MessageParser<TakeElectionSnapshotInput>(() => new TakeElectionSnapshotInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TakeElectionSnapshotInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TakeElectionSnapshotInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TakeElectionSnapshotInput(TakeElectionSnapshotInput other) : this() {
      termNumber_ = other.termNumber_;
      minedBlocks_ = other.minedBlocks_;
      roundNumber_ = other.roundNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TakeElectionSnapshotInput Clone() {
      return new TakeElectionSnapshotInput(this);
    }

    /// <summary>Field number for the "term_number" field.</summary>
    public const int TermNumberFieldNumber = 1;
    private long termNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TermNumber {
      get { return termNumber_; }
      set {
        termNumber_ = value;
      }
    }

    /// <summary>Field number for the "mined_blocks" field.</summary>
    public const int MinedBlocksFieldNumber = 2;
    private long minedBlocks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MinedBlocks {
      get { return minedBlocks_; }
      set {
        minedBlocks_ = value;
      }
    }

    /// <summary>Field number for the "round_number" field.</summary>
    public const int RoundNumberFieldNumber = 3;
    private long roundNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RoundNumber {
      get { return roundNumber_; }
      set {
        roundNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TakeElectionSnapshotInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TakeElectionSnapshotInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TermNumber != other.TermNumber) return false;
      if (MinedBlocks != other.MinedBlocks) return false;
      if (RoundNumber != other.RoundNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TermNumber != 0L) hash ^= TermNumber.GetHashCode();
      if (MinedBlocks != 0L) hash ^= MinedBlocks.GetHashCode();
      if (RoundNumber != 0L) hash ^= RoundNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TermNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TermNumber);
      }
      if (MinedBlocks != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MinedBlocks);
      }
      if (RoundNumber != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(RoundNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TermNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TermNumber);
      }
      if (MinedBlocks != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinedBlocks);
      }
      if (RoundNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoundNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TakeElectionSnapshotInput other) {
      if (other == null) {
        return;
      }
      if (other.TermNumber != 0L) {
        TermNumber = other.TermNumber;
      }
      if (other.MinedBlocks != 0L) {
        MinedBlocks = other.MinedBlocks;
      }
      if (other.RoundNumber != 0L) {
        RoundNumber = other.RoundNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TermNumber = input.ReadInt64();
            break;
          }
          case 16: {
            MinedBlocks = input.ReadInt64();
            break;
          }
          case 24: {
            RoundNumber = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class VoteMinerInput : pb::IMessage<VoteMinerInput> {
    private static readonly pb::MessageParser<VoteMinerInput> _parser = new pb::MessageParser<VoteMinerInput>(() => new VoteMinerInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoteMinerInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteMinerInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteMinerInput(VoteMinerInput other) : this() {
      candidatePubkey_ = other.candidatePubkey_;
      amount_ = other.amount_;
      endTimestamp_ = other.endTimestamp_ != null ? other.endTimestamp_.Clone() : null;
      token_ = other.token_ != null ? other.token_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteMinerInput Clone() {
      return new VoteMinerInput(this);
    }

    /// <summary>Field number for the "candidate_pubkey" field.</summary>
    public const int CandidatePubkeyFieldNumber = 1;
    private string candidatePubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CandidatePubkey {
      get { return candidatePubkey_; }
      set {
        candidatePubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "end_timestamp" field.</summary>
    public const int EndTimestampFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTimestamp {
      get { return endTimestamp_; }
      set {
        endTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 4;
    private global::AElf.Types.Hash token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash Token {
      get { return token_; }
      set {
        token_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoteMinerInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoteMinerInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CandidatePubkey != other.CandidatePubkey) return false;
      if (Amount != other.Amount) return false;
      if (!object.Equals(EndTimestamp, other.EndTimestamp)) return false;
      if (!object.Equals(Token, other.Token)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CandidatePubkey.Length != 0) hash ^= CandidatePubkey.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (endTimestamp_ != null) hash ^= EndTimestamp.GetHashCode();
      if (token_ != null) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CandidatePubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CandidatePubkey);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (endTimestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTimestamp);
      }
      if (token_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CandidatePubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CandidatePubkey);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (endTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTimestamp);
      }
      if (token_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoteMinerInput other) {
      if (other == null) {
        return;
      }
      if (other.CandidatePubkey.Length != 0) {
        CandidatePubkey = other.CandidatePubkey;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.endTimestamp_ != null) {
        if (endTimestamp_ == null) {
          EndTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTimestamp.MergeFrom(other.EndTimestamp);
      }
      if (other.token_ != null) {
        if (token_ == null) {
          Token = new global::AElf.Types.Hash();
        }
        Token.MergeFrom(other.Token);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CandidatePubkey = input.ReadString();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 26: {
            if (endTimestamp_ == null) {
              EndTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTimestamp);
            break;
          }
          case 34: {
            if (token_ == null) {
              Token = new global::AElf.Types.Hash();
            }
            input.ReadMessage(Token);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ChangeVotingOptionInput : pb::IMessage<ChangeVotingOptionInput> {
    private static readonly pb::MessageParser<ChangeVotingOptionInput> _parser = new pb::MessageParser<ChangeVotingOptionInput>(() => new ChangeVotingOptionInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeVotingOptionInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeVotingOptionInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeVotingOptionInput(ChangeVotingOptionInput other) : this() {
      voteId_ = other.voteId_ != null ? other.voteId_.Clone() : null;
      candidatePubkey_ = other.candidatePubkey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeVotingOptionInput Clone() {
      return new ChangeVotingOptionInput(this);
    }

    /// <summary>Field number for the "vote_id" field.</summary>
    public const int VoteIdFieldNumber = 1;
    private global::AElf.Types.Hash voteId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VoteId {
      get { return voteId_; }
      set {
        voteId_ = value;
      }
    }

    /// <summary>Field number for the "candidate_pubkey" field.</summary>
    public const int CandidatePubkeyFieldNumber = 2;
    private string candidatePubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CandidatePubkey {
      get { return candidatePubkey_; }
      set {
        candidatePubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeVotingOptionInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeVotingOptionInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VoteId, other.VoteId)) return false;
      if (CandidatePubkey != other.CandidatePubkey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (voteId_ != null) hash ^= VoteId.GetHashCode();
      if (CandidatePubkey.Length != 0) hash ^= CandidatePubkey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (voteId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VoteId);
      }
      if (CandidatePubkey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CandidatePubkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (voteId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoteId);
      }
      if (CandidatePubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CandidatePubkey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeVotingOptionInput other) {
      if (other == null) {
        return;
      }
      if (other.voteId_ != null) {
        if (voteId_ == null) {
          VoteId = new global::AElf.Types.Hash();
        }
        VoteId.MergeFrom(other.VoteId);
      }
      if (other.CandidatePubkey.Length != 0) {
        CandidatePubkey = other.CandidatePubkey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (voteId_ == null) {
              VoteId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VoteId);
            break;
          }
          case 18: {
            CandidatePubkey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UpdateTermNumberInput : pb::IMessage<UpdateTermNumberInput> {
    private static readonly pb::MessageParser<UpdateTermNumberInput> _parser = new pb::MessageParser<UpdateTermNumberInput>(() => new UpdateTermNumberInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateTermNumberInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTermNumberInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTermNumberInput(UpdateTermNumberInput other) : this() {
      termNumber_ = other.termNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTermNumberInput Clone() {
      return new UpdateTermNumberInput(this);
    }

    /// <summary>Field number for the "term_number" field.</summary>
    public const int TermNumberFieldNumber = 1;
    private long termNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TermNumber {
      get { return termNumber_; }
      set {
        termNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateTermNumberInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateTermNumberInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TermNumber != other.TermNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TermNumber != 0L) hash ^= TermNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TermNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TermNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TermNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TermNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateTermNumberInput other) {
      if (other == null) {
        return;
      }
      if (other.TermNumber != 0L) {
        TermNumber = other.TermNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TermNumber = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class GetElectionResultInput : pb::IMessage<GetElectionResultInput> {
    private static readonly pb::MessageParser<GetElectionResultInput> _parser = new pb::MessageParser<GetElectionResultInput>(() => new GetElectionResultInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetElectionResultInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetElectionResultInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetElectionResultInput(GetElectionResultInput other) : this() {
      termNumber_ = other.termNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetElectionResultInput Clone() {
      return new GetElectionResultInput(this);
    }

    /// <summary>Field number for the "term_number" field.</summary>
    public const int TermNumberFieldNumber = 1;
    private long termNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TermNumber {
      get { return termNumber_; }
      set {
        termNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetElectionResultInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetElectionResultInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TermNumber != other.TermNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TermNumber != 0L) hash ^= TermNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TermNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TermNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TermNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TermNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetElectionResultInput other) {
      if (other == null) {
        return;
      }
      if (other.TermNumber != 0L) {
        TermNumber = other.TermNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TermNumber = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ElectionResult : pb::IMessage<ElectionResult> {
    private static readonly pb::MessageParser<ElectionResult> _parser = new pb::MessageParser<ElectionResult>(() => new ElectionResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ElectionResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionResult(ElectionResult other) : this() {
      termNumber_ = other.termNumber_;
      results_ = other.results_.Clone();
      isActive_ = other.isActive_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionResult Clone() {
      return new ElectionResult(this);
    }

    /// <summary>Field number for the "term_number" field.</summary>
    public const int TermNumberFieldNumber = 1;
    private long termNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TermNumber {
      get { return termNumber_; }
      set {
        termNumber_ = value;
      }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 2;
    private static readonly pbc::MapField<string, long>.Codec _map_results_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt64(16, 0L), 18);
    private readonly pbc::MapField<string, long> results_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "is_active" field.</summary>
    public const int IsActiveFieldNumber = 3;
    private bool isActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsActive {
      get { return isActive_; }
      set {
        isActive_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ElectionResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ElectionResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TermNumber != other.TermNumber) return false;
      if (!Results.Equals(other.Results)) return false;
      if (IsActive != other.IsActive) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TermNumber != 0L) hash ^= TermNumber.GetHashCode();
      hash ^= Results.GetHashCode();
      if (IsActive != false) hash ^= IsActive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TermNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TermNumber);
      }
      results_.WriteTo(output, _map_results_codec);
      if (IsActive != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsActive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TermNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TermNumber);
      }
      size += results_.CalculateSize(_map_results_codec);
      if (IsActive != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ElectionResult other) {
      if (other == null) {
        return;
      }
      if (other.TermNumber != 0L) {
        TermNumber = other.TermNumber;
      }
      results_.Add(other.results_);
      if (other.IsActive != false) {
        IsActive = other.IsActive;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TermNumber = input.ReadInt64();
            break;
          }
          case 18: {
            results_.AddEntriesFrom(input, _map_results_codec);
            break;
          }
          case 24: {
            IsActive = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ElectorVote : pb::IMessage<ElectorVote> {
    private static readonly pb::MessageParser<ElectorVote> _parser = new pb::MessageParser<ElectorVote>(() => new ElectorVote());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ElectorVote> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectorVote() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectorVote(ElectorVote other) : this() {
      activeVotingRecordIds_ = other.activeVotingRecordIds_.Clone();
      withdrawnVotingRecordIds_ = other.withdrawnVotingRecordIds_.Clone();
      activeVotedVotesAmount_ = other.activeVotedVotesAmount_;
      allVotedVotesAmount_ = other.allVotedVotesAmount_;
      activeVotingRecords_ = other.activeVotingRecords_.Clone();
      withdrawnVotesRecords_ = other.withdrawnVotesRecords_.Clone();
      pubkey_ = other.pubkey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectorVote Clone() {
      return new ElectorVote(this);
    }

    /// <summary>Field number for the "active_voting_record_ids" field.</summary>
    public const int ActiveVotingRecordIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Types.Hash> _repeated_activeVotingRecordIds_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Types.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Hash> activeVotingRecordIds_ = new pbc::RepeatedField<global::AElf.Types.Hash>();
    /// <summary>
    /// Not withdrawn.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Types.Hash> ActiveVotingRecordIds {
      get { return activeVotingRecordIds_; }
    }

    /// <summary>Field number for the "withdrawn_voting_record_ids" field.</summary>
    public const int WithdrawnVotingRecordIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AElf.Types.Hash> _repeated_withdrawnVotingRecordIds_codec
        = pb::FieldCodec.ForMessage(18, global::AElf.Types.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Hash> withdrawnVotingRecordIds_ = new pbc::RepeatedField<global::AElf.Types.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Types.Hash> WithdrawnVotingRecordIds {
      get { return withdrawnVotingRecordIds_; }
    }

    /// <summary>Field number for the "active_voted_votes_amount" field.</summary>
    public const int ActiveVotedVotesAmountFieldNumber = 3;
    private long activeVotedVotesAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ActiveVotedVotesAmount {
      get { return activeVotedVotesAmount_; }
      set {
        activeVotedVotesAmount_ = value;
      }
    }

    /// <summary>Field number for the "all_voted_votes_amount" field.</summary>
    public const int AllVotedVotesAmountFieldNumber = 4;
    private long allVotedVotesAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AllVotedVotesAmount {
      get { return allVotedVotesAmount_; }
      set {
        allVotedVotesAmount_ = value;
      }
    }

    /// <summary>Field number for the "active_voting_records" field.</summary>
    public const int ActiveVotingRecordsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::AElf.Contracts.Election.ElectionVotingRecord> _repeated_activeVotingRecords_codec
        = pb::FieldCodec.ForMessage(42, global::AElf.Contracts.Election.ElectionVotingRecord.Parser);
    private readonly pbc::RepeatedField<global::AElf.Contracts.Election.ElectionVotingRecord> activeVotingRecords_ = new pbc::RepeatedField<global::AElf.Contracts.Election.ElectionVotingRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Contracts.Election.ElectionVotingRecord> ActiveVotingRecords {
      get { return activeVotingRecords_; }
    }

    /// <summary>Field number for the "withdrawn_votes_records" field.</summary>
    public const int WithdrawnVotesRecordsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::AElf.Contracts.Election.ElectionVotingRecord> _repeated_withdrawnVotesRecords_codec
        = pb::FieldCodec.ForMessage(50, global::AElf.Contracts.Election.ElectionVotingRecord.Parser);
    private readonly pbc::RepeatedField<global::AElf.Contracts.Election.ElectionVotingRecord> withdrawnVotesRecords_ = new pbc::RepeatedField<global::AElf.Contracts.Election.ElectionVotingRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Contracts.Election.ElectionVotingRecord> WithdrawnVotesRecords {
      get { return withdrawnVotesRecords_; }
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 7;
    private pb::ByteString pubkey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ElectorVote);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ElectorVote other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!activeVotingRecordIds_.Equals(other.activeVotingRecordIds_)) return false;
      if(!withdrawnVotingRecordIds_.Equals(other.withdrawnVotingRecordIds_)) return false;
      if (ActiveVotedVotesAmount != other.ActiveVotedVotesAmount) return false;
      if (AllVotedVotesAmount != other.AllVotedVotesAmount) return false;
      if(!activeVotingRecords_.Equals(other.activeVotingRecords_)) return false;
      if(!withdrawnVotesRecords_.Equals(other.withdrawnVotesRecords_)) return false;
      if (Pubkey != other.Pubkey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= activeVotingRecordIds_.GetHashCode();
      hash ^= withdrawnVotingRecordIds_.GetHashCode();
      if (ActiveVotedVotesAmount != 0L) hash ^= ActiveVotedVotesAmount.GetHashCode();
      if (AllVotedVotesAmount != 0L) hash ^= AllVotedVotesAmount.GetHashCode();
      hash ^= activeVotingRecords_.GetHashCode();
      hash ^= withdrawnVotesRecords_.GetHashCode();
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      activeVotingRecordIds_.WriteTo(output, _repeated_activeVotingRecordIds_codec);
      withdrawnVotingRecordIds_.WriteTo(output, _repeated_withdrawnVotingRecordIds_codec);
      if (ActiveVotedVotesAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ActiveVotedVotesAmount);
      }
      if (AllVotedVotesAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(AllVotedVotesAmount);
      }
      activeVotingRecords_.WriteTo(output, _repeated_activeVotingRecords_codec);
      withdrawnVotesRecords_.WriteTo(output, _repeated_withdrawnVotesRecords_codec);
      if (Pubkey.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(Pubkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += activeVotingRecordIds_.CalculateSize(_repeated_activeVotingRecordIds_codec);
      size += withdrawnVotingRecordIds_.CalculateSize(_repeated_withdrawnVotingRecordIds_codec);
      if (ActiveVotedVotesAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ActiveVotedVotesAmount);
      }
      if (AllVotedVotesAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AllVotedVotesAmount);
      }
      size += activeVotingRecords_.CalculateSize(_repeated_activeVotingRecords_codec);
      size += withdrawnVotesRecords_.CalculateSize(_repeated_withdrawnVotesRecords_codec);
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Pubkey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ElectorVote other) {
      if (other == null) {
        return;
      }
      activeVotingRecordIds_.Add(other.activeVotingRecordIds_);
      withdrawnVotingRecordIds_.Add(other.withdrawnVotingRecordIds_);
      if (other.ActiveVotedVotesAmount != 0L) {
        ActiveVotedVotesAmount = other.ActiveVotedVotesAmount;
      }
      if (other.AllVotedVotesAmount != 0L) {
        AllVotedVotesAmount = other.AllVotedVotesAmount;
      }
      activeVotingRecords_.Add(other.activeVotingRecords_);
      withdrawnVotesRecords_.Add(other.withdrawnVotesRecords_);
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            activeVotingRecordIds_.AddEntriesFrom(input, _repeated_activeVotingRecordIds_codec);
            break;
          }
          case 18: {
            withdrawnVotingRecordIds_.AddEntriesFrom(input, _repeated_withdrawnVotingRecordIds_codec);
            break;
          }
          case 24: {
            ActiveVotedVotesAmount = input.ReadInt64();
            break;
          }
          case 32: {
            AllVotedVotesAmount = input.ReadInt64();
            break;
          }
          case 42: {
            activeVotingRecords_.AddEntriesFrom(input, _repeated_activeVotingRecords_codec);
            break;
          }
          case 50: {
            withdrawnVotesRecords_.AddEntriesFrom(input, _repeated_withdrawnVotesRecords_codec);
            break;
          }
          case 58: {
            Pubkey = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class CandidateVote : pb::IMessage<CandidateVote> {
    private static readonly pb::MessageParser<CandidateVote> _parser = new pb::MessageParser<CandidateVote>(() => new CandidateVote());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CandidateVote> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateVote() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateVote(CandidateVote other) : this() {
      obtainedActiveVotingRecordIds_ = other.obtainedActiveVotingRecordIds_.Clone();
      obtainedWithdrawnVotingRecordIds_ = other.obtainedWithdrawnVotingRecordIds_.Clone();
      obtainedActiveVotedVotesAmount_ = other.obtainedActiveVotedVotesAmount_;
      allObtainedVotedVotesAmount_ = other.allObtainedVotedVotesAmount_;
      obtainedActiveVotingRecords_ = other.obtainedActiveVotingRecords_.Clone();
      obtainedWithdrawnVotesRecords_ = other.obtainedWithdrawnVotesRecords_.Clone();
      pubkey_ = other.pubkey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateVote Clone() {
      return new CandidateVote(this);
    }

    /// <summary>Field number for the "obtained_active_voting_record_ids" field.</summary>
    public const int ObtainedActiveVotingRecordIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Types.Hash> _repeated_obtainedActiveVotingRecordIds_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Types.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Hash> obtainedActiveVotingRecordIds_ = new pbc::RepeatedField<global::AElf.Types.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Types.Hash> ObtainedActiveVotingRecordIds {
      get { return obtainedActiveVotingRecordIds_; }
    }

    /// <summary>Field number for the "obtained_withdrawn_voting_record_ids" field.</summary>
    public const int ObtainedWithdrawnVotingRecordIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AElf.Types.Hash> _repeated_obtainedWithdrawnVotingRecordIds_codec
        = pb::FieldCodec.ForMessage(18, global::AElf.Types.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Hash> obtainedWithdrawnVotingRecordIds_ = new pbc::RepeatedField<global::AElf.Types.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Types.Hash> ObtainedWithdrawnVotingRecordIds {
      get { return obtainedWithdrawnVotingRecordIds_; }
    }

    /// <summary>Field number for the "obtained_active_voted_votes_amount" field.</summary>
    public const int ObtainedActiveVotedVotesAmountFieldNumber = 3;
    private long obtainedActiveVotedVotesAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ObtainedActiveVotedVotesAmount {
      get { return obtainedActiveVotedVotesAmount_; }
      set {
        obtainedActiveVotedVotesAmount_ = value;
      }
    }

    /// <summary>Field number for the "all_obtained_voted_votes_amount" field.</summary>
    public const int AllObtainedVotedVotesAmountFieldNumber = 4;
    private long allObtainedVotedVotesAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AllObtainedVotedVotesAmount {
      get { return allObtainedVotedVotesAmount_; }
      set {
        allObtainedVotedVotesAmount_ = value;
      }
    }

    /// <summary>Field number for the "obtained_active_voting_records" field.</summary>
    public const int ObtainedActiveVotingRecordsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::AElf.Contracts.Election.ElectionVotingRecord> _repeated_obtainedActiveVotingRecords_codec
        = pb::FieldCodec.ForMessage(42, global::AElf.Contracts.Election.ElectionVotingRecord.Parser);
    private readonly pbc::RepeatedField<global::AElf.Contracts.Election.ElectionVotingRecord> obtainedActiveVotingRecords_ = new pbc::RepeatedField<global::AElf.Contracts.Election.ElectionVotingRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Contracts.Election.ElectionVotingRecord> ObtainedActiveVotingRecords {
      get { return obtainedActiveVotingRecords_; }
    }

    /// <summary>Field number for the "obtained_withdrawn_votes_records" field.</summary>
    public const int ObtainedWithdrawnVotesRecordsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::AElf.Contracts.Election.ElectionVotingRecord> _repeated_obtainedWithdrawnVotesRecords_codec
        = pb::FieldCodec.ForMessage(50, global::AElf.Contracts.Election.ElectionVotingRecord.Parser);
    private readonly pbc::RepeatedField<global::AElf.Contracts.Election.ElectionVotingRecord> obtainedWithdrawnVotesRecords_ = new pbc::RepeatedField<global::AElf.Contracts.Election.ElectionVotingRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Contracts.Election.ElectionVotingRecord> ObtainedWithdrawnVotesRecords {
      get { return obtainedWithdrawnVotesRecords_; }
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 7;
    private pb::ByteString pubkey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CandidateVote);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CandidateVote other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!obtainedActiveVotingRecordIds_.Equals(other.obtainedActiveVotingRecordIds_)) return false;
      if(!obtainedWithdrawnVotingRecordIds_.Equals(other.obtainedWithdrawnVotingRecordIds_)) return false;
      if (ObtainedActiveVotedVotesAmount != other.ObtainedActiveVotedVotesAmount) return false;
      if (AllObtainedVotedVotesAmount != other.AllObtainedVotedVotesAmount) return false;
      if(!obtainedActiveVotingRecords_.Equals(other.obtainedActiveVotingRecords_)) return false;
      if(!obtainedWithdrawnVotesRecords_.Equals(other.obtainedWithdrawnVotesRecords_)) return false;
      if (Pubkey != other.Pubkey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= obtainedActiveVotingRecordIds_.GetHashCode();
      hash ^= obtainedWithdrawnVotingRecordIds_.GetHashCode();
      if (ObtainedActiveVotedVotesAmount != 0L) hash ^= ObtainedActiveVotedVotesAmount.GetHashCode();
      if (AllObtainedVotedVotesAmount != 0L) hash ^= AllObtainedVotedVotesAmount.GetHashCode();
      hash ^= obtainedActiveVotingRecords_.GetHashCode();
      hash ^= obtainedWithdrawnVotesRecords_.GetHashCode();
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      obtainedActiveVotingRecordIds_.WriteTo(output, _repeated_obtainedActiveVotingRecordIds_codec);
      obtainedWithdrawnVotingRecordIds_.WriteTo(output, _repeated_obtainedWithdrawnVotingRecordIds_codec);
      if (ObtainedActiveVotedVotesAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ObtainedActiveVotedVotesAmount);
      }
      if (AllObtainedVotedVotesAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(AllObtainedVotedVotesAmount);
      }
      obtainedActiveVotingRecords_.WriteTo(output, _repeated_obtainedActiveVotingRecords_codec);
      obtainedWithdrawnVotesRecords_.WriteTo(output, _repeated_obtainedWithdrawnVotesRecords_codec);
      if (Pubkey.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(Pubkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += obtainedActiveVotingRecordIds_.CalculateSize(_repeated_obtainedActiveVotingRecordIds_codec);
      size += obtainedWithdrawnVotingRecordIds_.CalculateSize(_repeated_obtainedWithdrawnVotingRecordIds_codec);
      if (ObtainedActiveVotedVotesAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ObtainedActiveVotedVotesAmount);
      }
      if (AllObtainedVotedVotesAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AllObtainedVotedVotesAmount);
      }
      size += obtainedActiveVotingRecords_.CalculateSize(_repeated_obtainedActiveVotingRecords_codec);
      size += obtainedWithdrawnVotesRecords_.CalculateSize(_repeated_obtainedWithdrawnVotesRecords_codec);
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Pubkey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CandidateVote other) {
      if (other == null) {
        return;
      }
      obtainedActiveVotingRecordIds_.Add(other.obtainedActiveVotingRecordIds_);
      obtainedWithdrawnVotingRecordIds_.Add(other.obtainedWithdrawnVotingRecordIds_);
      if (other.ObtainedActiveVotedVotesAmount != 0L) {
        ObtainedActiveVotedVotesAmount = other.ObtainedActiveVotedVotesAmount;
      }
      if (other.AllObtainedVotedVotesAmount != 0L) {
        AllObtainedVotedVotesAmount = other.AllObtainedVotedVotesAmount;
      }
      obtainedActiveVotingRecords_.Add(other.obtainedActiveVotingRecords_);
      obtainedWithdrawnVotesRecords_.Add(other.obtainedWithdrawnVotesRecords_);
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            obtainedActiveVotingRecordIds_.AddEntriesFrom(input, _repeated_obtainedActiveVotingRecordIds_codec);
            break;
          }
          case 18: {
            obtainedWithdrawnVotingRecordIds_.AddEntriesFrom(input, _repeated_obtainedWithdrawnVotingRecordIds_codec);
            break;
          }
          case 24: {
            ObtainedActiveVotedVotesAmount = input.ReadInt64();
            break;
          }
          case 32: {
            AllObtainedVotedVotesAmount = input.ReadInt64();
            break;
          }
          case 42: {
            obtainedActiveVotingRecords_.AddEntriesFrom(input, _repeated_obtainedActiveVotingRecords_codec);
            break;
          }
          case 50: {
            obtainedWithdrawnVotesRecords_.AddEntriesFrom(input, _repeated_obtainedWithdrawnVotesRecords_codec);
            break;
          }
          case 58: {
            Pubkey = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class CandidateInformation : pb::IMessage<CandidateInformation> {
    private static readonly pb::MessageParser<CandidateInformation> _parser = new pb::MessageParser<CandidateInformation>(() => new CandidateInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CandidateInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateInformation(CandidateInformation other) : this() {
      pubkey_ = other.pubkey_;
      terms_ = other.terms_.Clone();
      producedBlocks_ = other.producedBlocks_;
      missedTimeSlots_ = other.missedTimeSlots_;
      continualAppointmentCount_ = other.continualAppointmentCount_;
      announcementTransactionId_ = other.announcementTransactionId_ != null ? other.announcementTransactionId_.Clone() : null;
      isCurrentCandidate_ = other.isCurrentCandidate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateInformation Clone() {
      return new CandidateInformation(this);
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 1;
    private string pubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "terms" field.</summary>
    public const int TermsFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_terms_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> terms_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Terms {
      get { return terms_; }
    }

    /// <summary>Field number for the "produced_blocks" field.</summary>
    public const int ProducedBlocksFieldNumber = 3;
    private long producedBlocks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ProducedBlocks {
      get { return producedBlocks_; }
      set {
        producedBlocks_ = value;
      }
    }

    /// <summary>Field number for the "missed_time_slots" field.</summary>
    public const int MissedTimeSlotsFieldNumber = 4;
    private long missedTimeSlots_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MissedTimeSlots {
      get { return missedTimeSlots_; }
      set {
        missedTimeSlots_ = value;
      }
    }

    /// <summary>Field number for the "continual_appointment_count" field.</summary>
    public const int ContinualAppointmentCountFieldNumber = 5;
    private long continualAppointmentCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ContinualAppointmentCount {
      get { return continualAppointmentCount_; }
      set {
        continualAppointmentCount_ = value;
      }
    }

    /// <summary>Field number for the "announcement_transaction_id" field.</summary>
    public const int AnnouncementTransactionIdFieldNumber = 6;
    private global::AElf.Types.Hash announcementTransactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash AnnouncementTransactionId {
      get { return announcementTransactionId_; }
      set {
        announcementTransactionId_ = value;
      }
    }

    /// <summary>Field number for the "is_current_candidate" field.</summary>
    public const int IsCurrentCandidateFieldNumber = 7;
    private bool isCurrentCandidate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCurrentCandidate {
      get { return isCurrentCandidate_; }
      set {
        isCurrentCandidate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CandidateInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CandidateInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pubkey != other.Pubkey) return false;
      if(!terms_.Equals(other.terms_)) return false;
      if (ProducedBlocks != other.ProducedBlocks) return false;
      if (MissedTimeSlots != other.MissedTimeSlots) return false;
      if (ContinualAppointmentCount != other.ContinualAppointmentCount) return false;
      if (!object.Equals(AnnouncementTransactionId, other.AnnouncementTransactionId)) return false;
      if (IsCurrentCandidate != other.IsCurrentCandidate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      hash ^= terms_.GetHashCode();
      if (ProducedBlocks != 0L) hash ^= ProducedBlocks.GetHashCode();
      if (MissedTimeSlots != 0L) hash ^= MissedTimeSlots.GetHashCode();
      if (ContinualAppointmentCount != 0L) hash ^= ContinualAppointmentCount.GetHashCode();
      if (announcementTransactionId_ != null) hash ^= AnnouncementTransactionId.GetHashCode();
      if (IsCurrentCandidate != false) hash ^= IsCurrentCandidate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pubkey);
      }
      terms_.WriteTo(output, _repeated_terms_codec);
      if (ProducedBlocks != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ProducedBlocks);
      }
      if (MissedTimeSlots != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MissedTimeSlots);
      }
      if (ContinualAppointmentCount != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ContinualAppointmentCount);
      }
      if (announcementTransactionId_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(AnnouncementTransactionId);
      }
      if (IsCurrentCandidate != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsCurrentCandidate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pubkey);
      }
      size += terms_.CalculateSize(_repeated_terms_codec);
      if (ProducedBlocks != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProducedBlocks);
      }
      if (MissedTimeSlots != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MissedTimeSlots);
      }
      if (ContinualAppointmentCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ContinualAppointmentCount);
      }
      if (announcementTransactionId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnnouncementTransactionId);
      }
      if (IsCurrentCandidate != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CandidateInformation other) {
      if (other == null) {
        return;
      }
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      terms_.Add(other.terms_);
      if (other.ProducedBlocks != 0L) {
        ProducedBlocks = other.ProducedBlocks;
      }
      if (other.MissedTimeSlots != 0L) {
        MissedTimeSlots = other.MissedTimeSlots;
      }
      if (other.ContinualAppointmentCount != 0L) {
        ContinualAppointmentCount = other.ContinualAppointmentCount;
      }
      if (other.announcementTransactionId_ != null) {
        if (announcementTransactionId_ == null) {
          AnnouncementTransactionId = new global::AElf.Types.Hash();
        }
        AnnouncementTransactionId.MergeFrom(other.AnnouncementTransactionId);
      }
      if (other.IsCurrentCandidate != false) {
        IsCurrentCandidate = other.IsCurrentCandidate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pubkey = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            terms_.AddEntriesFrom(input, _repeated_terms_codec);
            break;
          }
          case 24: {
            ProducedBlocks = input.ReadInt64();
            break;
          }
          case 32: {
            MissedTimeSlots = input.ReadInt64();
            break;
          }
          case 40: {
            ContinualAppointmentCount = input.ReadInt64();
            break;
          }
          case 50: {
            if (announcementTransactionId_ == null) {
              AnnouncementTransactionId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(AnnouncementTransactionId);
            break;
          }
          case 56: {
            IsCurrentCandidate = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class CandidateDetail : pb::IMessage<CandidateDetail> {
    private static readonly pb::MessageParser<CandidateDetail> _parser = new pb::MessageParser<CandidateDetail>(() => new CandidateDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CandidateDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateDetail(CandidateDetail other) : this() {
      candidateInformation_ = other.candidateInformation_ != null ? other.candidateInformation_.Clone() : null;
      obtainedVotesAmount_ = other.obtainedVotesAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateDetail Clone() {
      return new CandidateDetail(this);
    }

    /// <summary>Field number for the "candidate_information" field.</summary>
    public const int CandidateInformationFieldNumber = 1;
    private global::AElf.Contracts.Election.CandidateInformation candidateInformation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Contracts.Election.CandidateInformation CandidateInformation {
      get { return candidateInformation_; }
      set {
        candidateInformation_ = value;
      }
    }

    /// <summary>Field number for the "obtained_votes_amount" field.</summary>
    public const int ObtainedVotesAmountFieldNumber = 2;
    private long obtainedVotesAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ObtainedVotesAmount {
      get { return obtainedVotesAmount_; }
      set {
        obtainedVotesAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CandidateDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CandidateDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CandidateInformation, other.CandidateInformation)) return false;
      if (ObtainedVotesAmount != other.ObtainedVotesAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (candidateInformation_ != null) hash ^= CandidateInformation.GetHashCode();
      if (ObtainedVotesAmount != 0L) hash ^= ObtainedVotesAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (candidateInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CandidateInformation);
      }
      if (ObtainedVotesAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ObtainedVotesAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (candidateInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CandidateInformation);
      }
      if (ObtainedVotesAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ObtainedVotesAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CandidateDetail other) {
      if (other == null) {
        return;
      }
      if (other.candidateInformation_ != null) {
        if (candidateInformation_ == null) {
          CandidateInformation = new global::AElf.Contracts.Election.CandidateInformation();
        }
        CandidateInformation.MergeFrom(other.CandidateInformation);
      }
      if (other.ObtainedVotesAmount != 0L) {
        ObtainedVotesAmount = other.ObtainedVotesAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (candidateInformation_ == null) {
              CandidateInformation = new global::AElf.Contracts.Election.CandidateInformation();
            }
            input.ReadMessage(CandidateInformation);
            break;
          }
          case 16: {
            ObtainedVotesAmount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ElectionVotingRecord : pb::IMessage<ElectionVotingRecord> {
    private static readonly pb::MessageParser<ElectionVotingRecord> _parser = new pb::MessageParser<ElectionVotingRecord>(() => new ElectionVotingRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ElectionVotingRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionVotingRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionVotingRecord(ElectionVotingRecord other) : this() {
      voter_ = other.voter_ != null ? other.voter_.Clone() : null;
      candidate_ = other.candidate_;
      amount_ = other.amount_;
      termNumber_ = other.termNumber_;
      voteId_ = other.voteId_ != null ? other.voteId_.Clone() : null;
      lockTime_ = other.lockTime_;
      unlockTimestamp_ = other.unlockTimestamp_ != null ? other.unlockTimestamp_.Clone() : null;
      withdrawTimestamp_ = other.withdrawTimestamp_ != null ? other.withdrawTimestamp_.Clone() : null;
      voteTimestamp_ = other.voteTimestamp_ != null ? other.voteTimestamp_.Clone() : null;
      isWithdrawn_ = other.isWithdrawn_;
      weight_ = other.weight_;
      isChangeTarget_ = other.isChangeTarget_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionVotingRecord Clone() {
      return new ElectionVotingRecord(this);
    }

    /// <summary>Field number for the "voter" field.</summary>
    public const int VoterFieldNumber = 1;
    private global::AElf.Types.Address voter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Voter {
      get { return voter_; }
      set {
        voter_ = value;
      }
    }

    /// <summary>Field number for the "candidate" field.</summary>
    public const int CandidateFieldNumber = 2;
    private string candidate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Candidate {
      get { return candidate_; }
      set {
        candidate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "term_number" field.</summary>
    public const int TermNumberFieldNumber = 4;
    private long termNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TermNumber {
      get { return termNumber_; }
      set {
        termNumber_ = value;
      }
    }

    /// <summary>Field number for the "vote_id" field.</summary>
    public const int VoteIdFieldNumber = 5;
    private global::AElf.Types.Hash voteId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VoteId {
      get { return voteId_; }
      set {
        voteId_ = value;
      }
    }

    /// <summary>Field number for the "lock_time" field.</summary>
    public const int LockTimeFieldNumber = 6;
    private long lockTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LockTime {
      get { return lockTime_; }
      set {
        lockTime_ = value;
      }
    }

    /// <summary>Field number for the "unlock_timestamp" field.</summary>
    public const int UnlockTimestampFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp unlockTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UnlockTimestamp {
      get { return unlockTimestamp_; }
      set {
        unlockTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "withdraw_timestamp" field.</summary>
    public const int WithdrawTimestampFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp withdrawTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp WithdrawTimestamp {
      get { return withdrawTimestamp_; }
      set {
        withdrawTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "vote_timestamp" field.</summary>
    public const int VoteTimestampFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp voteTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VoteTimestamp {
      get { return voteTimestamp_; }
      set {
        voteTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "is_withdrawn" field.</summary>
    public const int IsWithdrawnFieldNumber = 10;
    private bool isWithdrawn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWithdrawn {
      get { return isWithdrawn_; }
      set {
        isWithdrawn_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 11;
    private long weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    /// <summary>Field number for the "is_change_target" field.</summary>
    public const int IsChangeTargetFieldNumber = 12;
    private bool isChangeTarget_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsChangeTarget {
      get { return isChangeTarget_; }
      set {
        isChangeTarget_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ElectionVotingRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ElectionVotingRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Voter, other.Voter)) return false;
      if (Candidate != other.Candidate) return false;
      if (Amount != other.Amount) return false;
      if (TermNumber != other.TermNumber) return false;
      if (!object.Equals(VoteId, other.VoteId)) return false;
      if (LockTime != other.LockTime) return false;
      if (!object.Equals(UnlockTimestamp, other.UnlockTimestamp)) return false;
      if (!object.Equals(WithdrawTimestamp, other.WithdrawTimestamp)) return false;
      if (!object.Equals(VoteTimestamp, other.VoteTimestamp)) return false;
      if (IsWithdrawn != other.IsWithdrawn) return false;
      if (Weight != other.Weight) return false;
      if (IsChangeTarget != other.IsChangeTarget) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (voter_ != null) hash ^= Voter.GetHashCode();
      if (Candidate.Length != 0) hash ^= Candidate.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (TermNumber != 0L) hash ^= TermNumber.GetHashCode();
      if (voteId_ != null) hash ^= VoteId.GetHashCode();
      if (LockTime != 0L) hash ^= LockTime.GetHashCode();
      if (unlockTimestamp_ != null) hash ^= UnlockTimestamp.GetHashCode();
      if (withdrawTimestamp_ != null) hash ^= WithdrawTimestamp.GetHashCode();
      if (voteTimestamp_ != null) hash ^= VoteTimestamp.GetHashCode();
      if (IsWithdrawn != false) hash ^= IsWithdrawn.GetHashCode();
      if (Weight != 0L) hash ^= Weight.GetHashCode();
      if (IsChangeTarget != false) hash ^= IsChangeTarget.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (voter_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Voter);
      }
      if (Candidate.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Candidate);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (TermNumber != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TermNumber);
      }
      if (voteId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(VoteId);
      }
      if (LockTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(LockTime);
      }
      if (unlockTimestamp_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(UnlockTimestamp);
      }
      if (withdrawTimestamp_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(WithdrawTimestamp);
      }
      if (voteTimestamp_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(VoteTimestamp);
      }
      if (IsWithdrawn != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsWithdrawn);
      }
      if (Weight != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(Weight);
      }
      if (IsChangeTarget != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsChangeTarget);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (voter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Voter);
      }
      if (Candidate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Candidate);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (TermNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TermNumber);
      }
      if (voteId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoteId);
      }
      if (LockTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LockTime);
      }
      if (unlockTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnlockTimestamp);
      }
      if (withdrawTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WithdrawTimestamp);
      }
      if (voteTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoteTimestamp);
      }
      if (IsWithdrawn != false) {
        size += 1 + 1;
      }
      if (Weight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Weight);
      }
      if (IsChangeTarget != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ElectionVotingRecord other) {
      if (other == null) {
        return;
      }
      if (other.voter_ != null) {
        if (voter_ == null) {
          Voter = new global::AElf.Types.Address();
        }
        Voter.MergeFrom(other.Voter);
      }
      if (other.Candidate.Length != 0) {
        Candidate = other.Candidate;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.TermNumber != 0L) {
        TermNumber = other.TermNumber;
      }
      if (other.voteId_ != null) {
        if (voteId_ == null) {
          VoteId = new global::AElf.Types.Hash();
        }
        VoteId.MergeFrom(other.VoteId);
      }
      if (other.LockTime != 0L) {
        LockTime = other.LockTime;
      }
      if (other.unlockTimestamp_ != null) {
        if (unlockTimestamp_ == null) {
          UnlockTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UnlockTimestamp.MergeFrom(other.UnlockTimestamp);
      }
      if (other.withdrawTimestamp_ != null) {
        if (withdrawTimestamp_ == null) {
          WithdrawTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        WithdrawTimestamp.MergeFrom(other.WithdrawTimestamp);
      }
      if (other.voteTimestamp_ != null) {
        if (voteTimestamp_ == null) {
          VoteTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VoteTimestamp.MergeFrom(other.VoteTimestamp);
      }
      if (other.IsWithdrawn != false) {
        IsWithdrawn = other.IsWithdrawn;
      }
      if (other.Weight != 0L) {
        Weight = other.Weight;
      }
      if (other.IsChangeTarget != false) {
        IsChangeTarget = other.IsChangeTarget;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (voter_ == null) {
              Voter = new global::AElf.Types.Address();
            }
            input.ReadMessage(Voter);
            break;
          }
          case 18: {
            Candidate = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
          case 32: {
            TermNumber = input.ReadInt64();
            break;
          }
          case 42: {
            if (voteId_ == null) {
              VoteId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VoteId);
            break;
          }
          case 48: {
            LockTime = input.ReadInt64();
            break;
          }
          case 58: {
            if (unlockTimestamp_ == null) {
              UnlockTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UnlockTimestamp);
            break;
          }
          case 66: {
            if (withdrawTimestamp_ == null) {
              WithdrawTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(WithdrawTimestamp);
            break;
          }
          case 74: {
            if (voteTimestamp_ == null) {
              VoteTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VoteTimestamp);
            break;
          }
          case 80: {
            IsWithdrawn = input.ReadBool();
            break;
          }
          case 88: {
            Weight = input.ReadInt64();
            break;
          }
          case 96: {
            IsChangeTarget = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class PageInformation : pb::IMessage<PageInformation> {
    private static readonly pb::MessageParser<PageInformation> _parser = new pb::MessageParser<PageInformation>(() => new PageInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PageInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageInformation(PageInformation other) : this() {
      start_ = other.start_;
      length_ = other.length_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageInformation Clone() {
      return new PageInformation(this);
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 1;
    private int start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 2;
    private int length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PageInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PageInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Start != other.Start) return false;
      if (Length != other.Length) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Start != 0) hash ^= Start.GetHashCode();
      if (Length != 0) hash ^= Length.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Start != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Start);
      }
      if (Length != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Length);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Start != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Start);
      }
      if (Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PageInformation other) {
      if (other == null) {
        return;
      }
      if (other.Start != 0) {
        Start = other.Start;
      }
      if (other.Length != 0) {
        Length = other.Length;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Start = input.ReadInt32();
            break;
          }
          case 16: {
            Length = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class PubkeyList : pb::IMessage<PubkeyList> {
    private static readonly pb::MessageParser<PubkeyList> _parser = new pb::MessageParser<PubkeyList>(() => new PubkeyList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PubkeyList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubkeyList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubkeyList(PubkeyList other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubkeyList Clone() {
      return new PubkeyList(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_value_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> value_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PubkeyList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PubkeyList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PubkeyList other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class TermSnapshot : pb::IMessage<TermSnapshot> {
    private static readonly pb::MessageParser<TermSnapshot> _parser = new pb::MessageParser<TermSnapshot>(() => new TermSnapshot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TermSnapshot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TermSnapshot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TermSnapshot(TermSnapshot other) : this() {
      endRoundNumber_ = other.endRoundNumber_;
      minedBlocks_ = other.minedBlocks_;
      electionResult_ = other.electionResult_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TermSnapshot Clone() {
      return new TermSnapshot(this);
    }

    /// <summary>Field number for the "end_round_number" field.</summary>
    public const int EndRoundNumberFieldNumber = 1;
    private long endRoundNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndRoundNumber {
      get { return endRoundNumber_; }
      set {
        endRoundNumber_ = value;
      }
    }

    /// <summary>Field number for the "mined_blocks" field.</summary>
    public const int MinedBlocksFieldNumber = 2;
    private long minedBlocks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MinedBlocks {
      get { return minedBlocks_; }
      set {
        minedBlocks_ = value;
      }
    }

    /// <summary>Field number for the "election_result" field.</summary>
    public const int ElectionResultFieldNumber = 3;
    private static readonly pbc::MapField<string, long>.Codec _map_electionResult_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt64(16, 0L), 26);
    private readonly pbc::MapField<string, long> electionResult_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> ElectionResult {
      get { return electionResult_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TermSnapshot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TermSnapshot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EndRoundNumber != other.EndRoundNumber) return false;
      if (MinedBlocks != other.MinedBlocks) return false;
      if (!ElectionResult.Equals(other.ElectionResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EndRoundNumber != 0L) hash ^= EndRoundNumber.GetHashCode();
      if (MinedBlocks != 0L) hash ^= MinedBlocks.GetHashCode();
      hash ^= ElectionResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EndRoundNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(EndRoundNumber);
      }
      if (MinedBlocks != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MinedBlocks);
      }
      electionResult_.WriteTo(output, _map_electionResult_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EndRoundNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndRoundNumber);
      }
      if (MinedBlocks != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinedBlocks);
      }
      size += electionResult_.CalculateSize(_map_electionResult_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TermSnapshot other) {
      if (other == null) {
        return;
      }
      if (other.EndRoundNumber != 0L) {
        EndRoundNumber = other.EndRoundNumber;
      }
      if (other.MinedBlocks != 0L) {
        MinedBlocks = other.MinedBlocks;
      }
      electionResult_.Add(other.electionResult_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EndRoundNumber = input.ReadInt64();
            break;
          }
          case 16: {
            MinedBlocks = input.ReadInt64();
            break;
          }
          case 26: {
            electionResult_.AddEntriesFrom(input, _map_electionResult_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UpdateMinersCountInput : pb::IMessage<UpdateMinersCountInput> {
    private static readonly pb::MessageParser<UpdateMinersCountInput> _parser = new pb::MessageParser<UpdateMinersCountInput>(() => new UpdateMinersCountInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateMinersCountInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMinersCountInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMinersCountInput(UpdateMinersCountInput other) : this() {
      minersCount_ = other.minersCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMinersCountInput Clone() {
      return new UpdateMinersCountInput(this);
    }

    /// <summary>Field number for the "miners_count" field.</summary>
    public const int MinersCountFieldNumber = 1;
    private int minersCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinersCount {
      get { return minersCount_; }
      set {
        minersCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateMinersCountInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateMinersCountInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MinersCount != other.MinersCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MinersCount != 0) hash ^= MinersCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MinersCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MinersCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MinersCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinersCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateMinersCountInput other) {
      if (other == null) {
        return;
      }
      if (other.MinersCount != 0) {
        MinersCount = other.MinersCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MinersCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class GetPageableCandidateInformationOutput : pb::IMessage<GetPageableCandidateInformationOutput> {
    private static readonly pb::MessageParser<GetPageableCandidateInformationOutput> _parser = new pb::MessageParser<GetPageableCandidateInformationOutput>(() => new GetPageableCandidateInformationOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPageableCandidateInformationOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPageableCandidateInformationOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPageableCandidateInformationOutput(GetPageableCandidateInformationOutput other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPageableCandidateInformationOutput Clone() {
      return new GetPageableCandidateInformationOutput(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Contracts.Election.CandidateDetail> _repeated_value_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Contracts.Election.CandidateDetail.Parser);
    private readonly pbc::RepeatedField<global::AElf.Contracts.Election.CandidateDetail> value_ = new pbc::RepeatedField<global::AElf.Contracts.Election.CandidateDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Contracts.Election.CandidateDetail> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPageableCandidateInformationOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPageableCandidateInformationOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPageableCandidateInformationOutput other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class SetTreasurySchemeIdsInput : pb::IMessage<SetTreasurySchemeIdsInput> {
    private static readonly pb::MessageParser<SetTreasurySchemeIdsInput> _parser = new pb::MessageParser<SetTreasurySchemeIdsInput>(() => new SetTreasurySchemeIdsInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetTreasurySchemeIdsInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetTreasurySchemeIdsInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetTreasurySchemeIdsInput(SetTreasurySchemeIdsInput other) : this() {
      treasuryHash_ = other.treasuryHash_ != null ? other.treasuryHash_.Clone() : null;
      welfareHash_ = other.welfareHash_ != null ? other.welfareHash_.Clone() : null;
      subsidyHash_ = other.subsidyHash_ != null ? other.subsidyHash_.Clone() : null;
      votesRewardHash_ = other.votesRewardHash_ != null ? other.votesRewardHash_.Clone() : null;
      reElectionRewardHash_ = other.reElectionRewardHash_ != null ? other.reElectionRewardHash_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetTreasurySchemeIdsInput Clone() {
      return new SetTreasurySchemeIdsInput(this);
    }

    /// <summary>Field number for the "treasury_hash" field.</summary>
    public const int TreasuryHashFieldNumber = 1;
    private global::AElf.Types.Hash treasuryHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash TreasuryHash {
      get { return treasuryHash_; }
      set {
        treasuryHash_ = value;
      }
    }

    /// <summary>Field number for the "welfare_hash" field.</summary>
    public const int WelfareHashFieldNumber = 2;
    private global::AElf.Types.Hash welfareHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash WelfareHash {
      get { return welfareHash_; }
      set {
        welfareHash_ = value;
      }
    }

    /// <summary>Field number for the "subsidy_hash" field.</summary>
    public const int SubsidyHashFieldNumber = 3;
    private global::AElf.Types.Hash subsidyHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash SubsidyHash {
      get { return subsidyHash_; }
      set {
        subsidyHash_ = value;
      }
    }

    /// <summary>Field number for the "votes_reward_hash" field.</summary>
    public const int VotesRewardHashFieldNumber = 4;
    private global::AElf.Types.Hash votesRewardHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VotesRewardHash {
      get { return votesRewardHash_; }
      set {
        votesRewardHash_ = value;
      }
    }

    /// <summary>Field number for the "re_election_reward_hash" field.</summary>
    public const int ReElectionRewardHashFieldNumber = 5;
    private global::AElf.Types.Hash reElectionRewardHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash ReElectionRewardHash {
      get { return reElectionRewardHash_; }
      set {
        reElectionRewardHash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetTreasurySchemeIdsInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetTreasurySchemeIdsInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TreasuryHash, other.TreasuryHash)) return false;
      if (!object.Equals(WelfareHash, other.WelfareHash)) return false;
      if (!object.Equals(SubsidyHash, other.SubsidyHash)) return false;
      if (!object.Equals(VotesRewardHash, other.VotesRewardHash)) return false;
      if (!object.Equals(ReElectionRewardHash, other.ReElectionRewardHash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (treasuryHash_ != null) hash ^= TreasuryHash.GetHashCode();
      if (welfareHash_ != null) hash ^= WelfareHash.GetHashCode();
      if (subsidyHash_ != null) hash ^= SubsidyHash.GetHashCode();
      if (votesRewardHash_ != null) hash ^= VotesRewardHash.GetHashCode();
      if (reElectionRewardHash_ != null) hash ^= ReElectionRewardHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (treasuryHash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TreasuryHash);
      }
      if (welfareHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(WelfareHash);
      }
      if (subsidyHash_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SubsidyHash);
      }
      if (votesRewardHash_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(VotesRewardHash);
      }
      if (reElectionRewardHash_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ReElectionRewardHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (treasuryHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TreasuryHash);
      }
      if (welfareHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WelfareHash);
      }
      if (subsidyHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubsidyHash);
      }
      if (votesRewardHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VotesRewardHash);
      }
      if (reElectionRewardHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReElectionRewardHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetTreasurySchemeIdsInput other) {
      if (other == null) {
        return;
      }
      if (other.treasuryHash_ != null) {
        if (treasuryHash_ == null) {
          TreasuryHash = new global::AElf.Types.Hash();
        }
        TreasuryHash.MergeFrom(other.TreasuryHash);
      }
      if (other.welfareHash_ != null) {
        if (welfareHash_ == null) {
          WelfareHash = new global::AElf.Types.Hash();
        }
        WelfareHash.MergeFrom(other.WelfareHash);
      }
      if (other.subsidyHash_ != null) {
        if (subsidyHash_ == null) {
          SubsidyHash = new global::AElf.Types.Hash();
        }
        SubsidyHash.MergeFrom(other.SubsidyHash);
      }
      if (other.votesRewardHash_ != null) {
        if (votesRewardHash_ == null) {
          VotesRewardHash = new global::AElf.Types.Hash();
        }
        VotesRewardHash.MergeFrom(other.VotesRewardHash);
      }
      if (other.reElectionRewardHash_ != null) {
        if (reElectionRewardHash_ == null) {
          ReElectionRewardHash = new global::AElf.Types.Hash();
        }
        ReElectionRewardHash.MergeFrom(other.ReElectionRewardHash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (treasuryHash_ == null) {
              TreasuryHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(TreasuryHash);
            break;
          }
          case 18: {
            if (welfareHash_ == null) {
              WelfareHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(WelfareHash);
            break;
          }
          case 26: {
            if (subsidyHash_ == null) {
              SubsidyHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(SubsidyHash);
            break;
          }
          case 34: {
            if (votesRewardHash_ == null) {
              VotesRewardHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VotesRewardHash);
            break;
          }
          case 42: {
            if (reElectionRewardHash_ == null) {
              ReElectionRewardHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(ReElectionRewardHash);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DataCenterRankingList : pb::IMessage<DataCenterRankingList> {
    private static readonly pb::MessageParser<DataCenterRankingList> _parser = new pb::MessageParser<DataCenterRankingList>(() => new DataCenterRankingList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataCenterRankingList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataCenterRankingList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataCenterRankingList(DataCenterRankingList other) : this() {
      dataCenters_ = other.dataCenters_.Clone();
      minimumVotes_ = other.minimumVotes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataCenterRankingList Clone() {
      return new DataCenterRankingList(this);
    }

    /// <summary>Field number for the "data_centers" field.</summary>
    public const int DataCentersFieldNumber = 1;
    private static readonly pbc::MapField<string, long>.Codec _map_dataCenters_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt64(16, 0L), 10);
    private readonly pbc::MapField<string, long> dataCenters_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> DataCenters {
      get { return dataCenters_; }
    }

    /// <summary>Field number for the "minimum_votes" field.</summary>
    public const int MinimumVotesFieldNumber = 2;
    private long minimumVotes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MinimumVotes {
      get { return minimumVotes_; }
      set {
        minimumVotes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataCenterRankingList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataCenterRankingList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!DataCenters.Equals(other.DataCenters)) return false;
      if (MinimumVotes != other.MinimumVotes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= DataCenters.GetHashCode();
      if (MinimumVotes != 0L) hash ^= MinimumVotes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      dataCenters_.WriteTo(output, _map_dataCenters_codec);
      if (MinimumVotes != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MinimumVotes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dataCenters_.CalculateSize(_map_dataCenters_codec);
      if (MinimumVotes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumVotes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataCenterRankingList other) {
      if (other == null) {
        return;
      }
      dataCenters_.Add(other.dataCenters_);
      if (other.MinimumVotes != 0L) {
        MinimumVotes = other.MinimumVotes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dataCenters_.AddEntriesFrom(input, _map_dataCenters_codec);
            break;
          }
          case 16: {
            MinimumVotes = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class VoteWeightInterest : pb::IMessage<VoteWeightInterest> {
    private static readonly pb::MessageParser<VoteWeightInterest> _parser = new pb::MessageParser<VoteWeightInterest>(() => new VoteWeightInterest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoteWeightInterest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteWeightInterest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteWeightInterest(VoteWeightInterest other) : this() {
      day_ = other.day_;
      interest_ = other.interest_;
      capital_ = other.capital_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteWeightInterest Clone() {
      return new VoteWeightInterest(this);
    }

    /// <summary>Field number for the "day" field.</summary>
    public const int DayFieldNumber = 1;
    private int day_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Day {
      get { return day_; }
      set {
        day_ = value;
      }
    }

    /// <summary>Field number for the "interest" field.</summary>
    public const int InterestFieldNumber = 2;
    private int interest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Interest {
      get { return interest_; }
      set {
        interest_ = value;
      }
    }

    /// <summary>Field number for the "capital" field.</summary>
    public const int CapitalFieldNumber = 3;
    private int capital_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Capital {
      get { return capital_; }
      set {
        capital_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoteWeightInterest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoteWeightInterest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Day != other.Day) return false;
      if (Interest != other.Interest) return false;
      if (Capital != other.Capital) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Day != 0) hash ^= Day.GetHashCode();
      if (Interest != 0) hash ^= Interest.GetHashCode();
      if (Capital != 0) hash ^= Capital.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Day != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Day);
      }
      if (Interest != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Interest);
      }
      if (Capital != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Capital);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Day != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Day);
      }
      if (Interest != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Interest);
      }
      if (Capital != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Capital);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoteWeightInterest other) {
      if (other == null) {
        return;
      }
      if (other.Day != 0) {
        Day = other.Day;
      }
      if (other.Interest != 0) {
        Interest = other.Interest;
      }
      if (other.Capital != 0) {
        Capital = other.Capital;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Day = input.ReadInt32();
            break;
          }
          case 16: {
            Interest = input.ReadInt32();
            break;
          }
          case 24: {
            Capital = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class VoteWeightInterestList : pb::IMessage<VoteWeightInterestList> {
    private static readonly pb::MessageParser<VoteWeightInterestList> _parser = new pb::MessageParser<VoteWeightInterestList>(() => new VoteWeightInterestList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoteWeightInterestList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteWeightInterestList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteWeightInterestList(VoteWeightInterestList other) : this() {
      voteWeightInterestInfos_ = other.voteWeightInterestInfos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteWeightInterestList Clone() {
      return new VoteWeightInterestList(this);
    }

    /// <summary>Field number for the "vote_weight_interest_infos" field.</summary>
    public const int VoteWeightInterestInfosFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Contracts.Election.VoteWeightInterest> _repeated_voteWeightInterestInfos_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Contracts.Election.VoteWeightInterest.Parser);
    private readonly pbc::RepeatedField<global::AElf.Contracts.Election.VoteWeightInterest> voteWeightInterestInfos_ = new pbc::RepeatedField<global::AElf.Contracts.Election.VoteWeightInterest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Contracts.Election.VoteWeightInterest> VoteWeightInterestInfos {
      get { return voteWeightInterestInfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoteWeightInterestList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoteWeightInterestList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!voteWeightInterestInfos_.Equals(other.voteWeightInterestInfos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= voteWeightInterestInfos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      voteWeightInterestInfos_.WriteTo(output, _repeated_voteWeightInterestInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += voteWeightInterestInfos_.CalculateSize(_repeated_voteWeightInterestInfos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoteWeightInterestList other) {
      if (other == null) {
        return;
      }
      voteWeightInterestInfos_.Add(other.voteWeightInterestInfos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            voteWeightInterestInfos_.AddEntriesFrom(input, _repeated_voteWeightInterestInfos_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class VoteWeightProportion : pb::IMessage<VoteWeightProportion> {
    private static readonly pb::MessageParser<VoteWeightProportion> _parser = new pb::MessageParser<VoteWeightProportion>(() => new VoteWeightProportion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoteWeightProportion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteWeightProportion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteWeightProportion(VoteWeightProportion other) : this() {
      timeProportion_ = other.timeProportion_;
      amountProportion_ = other.amountProportion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteWeightProportion Clone() {
      return new VoteWeightProportion(this);
    }

    /// <summary>Field number for the "time_proportion" field.</summary>
    public const int TimeProportionFieldNumber = 1;
    private int timeProportion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TimeProportion {
      get { return timeProportion_; }
      set {
        timeProportion_ = value;
      }
    }

    /// <summary>Field number for the "amount_proportion" field.</summary>
    public const int AmountProportionFieldNumber = 2;
    private int amountProportion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AmountProportion {
      get { return amountProportion_; }
      set {
        amountProportion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoteWeightProportion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoteWeightProportion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimeProportion != other.TimeProportion) return false;
      if (AmountProportion != other.AmountProportion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TimeProportion != 0) hash ^= TimeProportion.GetHashCode();
      if (AmountProportion != 0) hash ^= AmountProportion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TimeProportion != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TimeProportion);
      }
      if (AmountProportion != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AmountProportion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TimeProportion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeProportion);
      }
      if (AmountProportion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AmountProportion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoteWeightProportion other) {
      if (other == null) {
        return;
      }
      if (other.TimeProportion != 0) {
        TimeProportion = other.TimeProportion;
      }
      if (other.AmountProportion != 0) {
        AmountProportion = other.AmountProportion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TimeProportion = input.ReadInt32();
            break;
          }
          case 16: {
            AmountProportion = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class VoteInformation : pb::IMessage<VoteInformation> {
    private static readonly pb::MessageParser<VoteInformation> _parser = new pb::MessageParser<VoteInformation>(() => new VoteInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoteInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteInformation(VoteInformation other) : this() {
      amount_ = other.amount_;
      lockTime_ = other.lockTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteInformation Clone() {
      return new VoteInformation(this);
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 1;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "lock_time" field.</summary>
    public const int LockTimeFieldNumber = 2;
    private long lockTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LockTime {
      get { return lockTime_; }
      set {
        lockTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoteInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoteInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Amount != other.Amount) return false;
      if (LockTime != other.LockTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (LockTime != 0L) hash ^= LockTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Amount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Amount);
      }
      if (LockTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LockTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (LockTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LockTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoteInformation other) {
      if (other == null) {
        return;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.LockTime != 0L) {
        LockTime = other.LockTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Amount = input.ReadInt64();
            break;
          }
          case 16: {
            LockTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class GetMinerReplacementInformationInput : pb::IMessage<GetMinerReplacementInformationInput> {
    private static readonly pb::MessageParser<GetMinerReplacementInformationInput> _parser = new pb::MessageParser<GetMinerReplacementInformationInput>(() => new GetMinerReplacementInformationInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMinerReplacementInformationInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMinerReplacementInformationInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMinerReplacementInformationInput(GetMinerReplacementInformationInput other) : this() {
      currentMinerList_ = other.currentMinerList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMinerReplacementInformationInput Clone() {
      return new GetMinerReplacementInformationInput(this);
    }

    /// <summary>Field number for the "current_miner_list" field.</summary>
    public const int CurrentMinerListFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_currentMinerList_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> currentMinerList_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CurrentMinerList {
      get { return currentMinerList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMinerReplacementInformationInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMinerReplacementInformationInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!currentMinerList_.Equals(other.currentMinerList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= currentMinerList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      currentMinerList_.WriteTo(output, _repeated_currentMinerList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += currentMinerList_.CalculateSize(_repeated_currentMinerList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMinerReplacementInformationInput other) {
      if (other == null) {
        return;
      }
      currentMinerList_.Add(other.currentMinerList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            currentMinerList_.AddEntriesFrom(input, _repeated_currentMinerList_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class MinerReplacementInformation : pb::IMessage<MinerReplacementInformation> {
    private static readonly pb::MessageParser<MinerReplacementInformation> _parser = new pb::MessageParser<MinerReplacementInformation>(() => new MinerReplacementInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MinerReplacementInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinerReplacementInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinerReplacementInformation(MinerReplacementInformation other) : this() {
      alternativeCandidatePubkeys_ = other.alternativeCandidatePubkeys_.Clone();
      evilMinerPubkeys_ = other.evilMinerPubkeys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinerReplacementInformation Clone() {
      return new MinerReplacementInformation(this);
    }

    /// <summary>Field number for the "alternative_candidate_pubkeys" field.</summary>
    public const int AlternativeCandidatePubkeysFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_alternativeCandidatePubkeys_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> alternativeCandidatePubkeys_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AlternativeCandidatePubkeys {
      get { return alternativeCandidatePubkeys_; }
    }

    /// <summary>Field number for the "evil_miner_pubkeys" field.</summary>
    public const int EvilMinerPubkeysFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_evilMinerPubkeys_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> evilMinerPubkeys_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> EvilMinerPubkeys {
      get { return evilMinerPubkeys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MinerReplacementInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MinerReplacementInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!alternativeCandidatePubkeys_.Equals(other.alternativeCandidatePubkeys_)) return false;
      if(!evilMinerPubkeys_.Equals(other.evilMinerPubkeys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= alternativeCandidatePubkeys_.GetHashCode();
      hash ^= evilMinerPubkeys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      alternativeCandidatePubkeys_.WriteTo(output, _repeated_alternativeCandidatePubkeys_codec);
      evilMinerPubkeys_.WriteTo(output, _repeated_evilMinerPubkeys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += alternativeCandidatePubkeys_.CalculateSize(_repeated_alternativeCandidatePubkeys_codec);
      size += evilMinerPubkeys_.CalculateSize(_repeated_evilMinerPubkeys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MinerReplacementInformation other) {
      if (other == null) {
        return;
      }
      alternativeCandidatePubkeys_.Add(other.alternativeCandidatePubkeys_);
      evilMinerPubkeys_.Add(other.evilMinerPubkeys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            alternativeCandidatePubkeys_.AddEntriesFrom(input, _repeated_alternativeCandidatePubkeys_codec);
            break;
          }
          case 18: {
            evilMinerPubkeys_.AddEntriesFrom(input, _repeated_evilMinerPubkeys_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Events
  /// </summary>
  internal sealed partial class EvilMinerDetected : pb::IMessage<EvilMinerDetected> {
    private static readonly pb::MessageParser<EvilMinerDetected> _parser = new pb::MessageParser<EvilMinerDetected>(() => new EvilMinerDetected());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EvilMinerDetected> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Election.ElectionContractReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EvilMinerDetected() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EvilMinerDetected(EvilMinerDetected other) : this() {
      pubkey_ = other.pubkey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EvilMinerDetected Clone() {
      return new EvilMinerDetected(this);
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 1;
    private string pubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EvilMinerDetected);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EvilMinerDetected other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pubkey != other.Pubkey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pubkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pubkey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EvilMinerDetected other) {
      if (other == null) {
        return;
      }
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pubkey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
