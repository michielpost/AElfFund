// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: token_contract.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace AElf.Contracts.MultiToken {

  #region Events
  internal partial class ExtraTokenListModified : aelf::IEvent<ExtraTokenListModified>
  {
    public global::System.Collections.Generic.IEnumerable<ExtraTokenListModified> GetIndexed()
    {
      return new List<ExtraTokenListModified>
      {
      };
    }

    public ExtraTokenListModified GetNonIndexed()
    {
      return new ExtraTokenListModified
      {
        SymbolListToPayTxSizeFee = SymbolListToPayTxSizeFee,
      };
    }
  }

  internal partial class Transferred : aelf::IEvent<Transferred>
  {
    public global::System.Collections.Generic.IEnumerable<Transferred> GetIndexed()
    {
      return new List<Transferred>
      {
      new Transferred
      {
        From = From
      },
      new Transferred
      {
        To = To
      },
      new Transferred
      {
        Symbol = Symbol
      },
      };
    }

    public Transferred GetNonIndexed()
    {
      return new Transferred
      {
        Amount = Amount,
        Memo = Memo,
      };
    }
  }

  internal partial class Approved : aelf::IEvent<Approved>
  {
    public global::System.Collections.Generic.IEnumerable<Approved> GetIndexed()
    {
      return new List<Approved>
      {
      new Approved
      {
        Owner = Owner
      },
      new Approved
      {
        Spender = Spender
      },
      new Approved
      {
        Symbol = Symbol
      },
      };
    }

    public Approved GetNonIndexed()
    {
      return new Approved
      {
        Amount = Amount,
      };
    }
  }

  internal partial class UnApproved : aelf::IEvent<UnApproved>
  {
    public global::System.Collections.Generic.IEnumerable<UnApproved> GetIndexed()
    {
      return new List<UnApproved>
      {
      new UnApproved
      {
        Owner = Owner
      },
      new UnApproved
      {
        Spender = Spender
      },
      new UnApproved
      {
        Symbol = Symbol
      },
      };
    }

    public UnApproved GetNonIndexed()
    {
      return new UnApproved
      {
        Amount = Amount,
      };
    }
  }

  internal partial class Burned : aelf::IEvent<Burned>
  {
    public global::System.Collections.Generic.IEnumerable<Burned> GetIndexed()
    {
      return new List<Burned>
      {
      new Burned
      {
        Burner = Burner
      },
      new Burned
      {
        Symbol = Symbol
      },
      };
    }

    public Burned GetNonIndexed()
    {
      return new Burned
      {
        Amount = Amount,
      };
    }
  }

  internal partial class ChainPrimaryTokenSymbolSet : aelf::IEvent<ChainPrimaryTokenSymbolSet>
  {
    public global::System.Collections.Generic.IEnumerable<ChainPrimaryTokenSymbolSet> GetIndexed()
    {
      return new List<ChainPrimaryTokenSymbolSet>
      {
      };
    }

    public ChainPrimaryTokenSymbolSet GetNonIndexed()
    {
      return new ChainPrimaryTokenSymbolSet
      {
        TokenSymbol = TokenSymbol,
      };
    }
  }

  internal partial class TransactionSizeFeeUnitPriceUpdated : aelf::IEvent<TransactionSizeFeeUnitPriceUpdated>
  {
    public global::System.Collections.Generic.IEnumerable<TransactionSizeFeeUnitPriceUpdated> GetIndexed()
    {
      return new List<TransactionSizeFeeUnitPriceUpdated>
      {
      };
    }

    public TransactionSizeFeeUnitPriceUpdated GetNonIndexed()
    {
      return new TransactionSizeFeeUnitPriceUpdated
      {
        UnitPrice = UnitPrice,
      };
    }
  }

  internal partial class CalculateFeeAlgorithmUpdated : aelf::IEvent<CalculateFeeAlgorithmUpdated>
  {
    public global::System.Collections.Generic.IEnumerable<CalculateFeeAlgorithmUpdated> GetIndexed()
    {
      return new List<CalculateFeeAlgorithmUpdated>
      {
      };
    }

    public CalculateFeeAlgorithmUpdated GetNonIndexed()
    {
      return new CalculateFeeAlgorithmUpdated
      {
        AllTypeFeeCoefficients = AllTypeFeeCoefficients,
      };
    }
  }

  internal partial class RentalCharged : aelf::IEvent<RentalCharged>
  {
    public global::System.Collections.Generic.IEnumerable<RentalCharged> GetIndexed()
    {
      return new List<RentalCharged>
      {
      };
    }

    public RentalCharged GetNonIndexed()
    {
      return new RentalCharged
      {
        Symbol = Symbol,
        Amount = Amount,
      };
    }
  }

  internal partial class RentalAccountBalanceInsufficient : aelf::IEvent<RentalAccountBalanceInsufficient>
  {
    public global::System.Collections.Generic.IEnumerable<RentalAccountBalanceInsufficient> GetIndexed()
    {
      return new List<RentalAccountBalanceInsufficient>
      {
      };
    }

    public RentalAccountBalanceInsufficient GetNonIndexed()
    {
      return new RentalAccountBalanceInsufficient
      {
        Symbol = Symbol,
        Amount = Amount,
      };
    }
  }

  internal partial class TokenCreated : aelf::IEvent<TokenCreated>
  {
    public global::System.Collections.Generic.IEnumerable<TokenCreated> GetIndexed()
    {
      return new List<TokenCreated>
      {
      };
    }

    public TokenCreated GetNonIndexed()
    {
      return new TokenCreated
      {
        Symbol = Symbol,
        TokenName = TokenName,
        TotalSupply = TotalSupply,
        Decimals = Decimals,
        Issuer = Issuer,
        IsBurnable = IsBurnable,
        IssueChainId = IssueChainId,
      };
    }
  }

  internal partial class Issued : aelf::IEvent<Issued>
  {
    public global::System.Collections.Generic.IEnumerable<Issued> GetIndexed()
    {
      return new List<Issued>
      {
      };
    }

    public Issued GetNonIndexed()
    {
      return new Issued
      {
        Symbol = Symbol,
        Amount = Amount,
        Memo = Memo,
        To = To,
      };
    }
  }

  internal partial class CrossChainTransferred : aelf::IEvent<CrossChainTransferred>
  {
    public global::System.Collections.Generic.IEnumerable<CrossChainTransferred> GetIndexed()
    {
      return new List<CrossChainTransferred>
      {
      };
    }

    public CrossChainTransferred GetNonIndexed()
    {
      return new CrossChainTransferred
      {
        From = From,
        To = To,
        Symbol = Symbol,
        Amount = Amount,
        Memo = Memo,
        ToChainId = ToChainId,
        IssueChainId = IssueChainId,
      };
    }
  }

  internal partial class CrossChainReceived : aelf::IEvent<CrossChainReceived>
  {
    public global::System.Collections.Generic.IEnumerable<CrossChainReceived> GetIndexed()
    {
      return new List<CrossChainReceived>
      {
      };
    }

    public CrossChainReceived GetNonIndexed()
    {
      return new CrossChainReceived
      {
        From = From,
        To = To,
        Symbol = Symbol,
        Amount = Amount,
        Memo = Memo,
        FromChainId = FromChainId,
        IssueChainId = IssueChainId,
        ParentChainHeight = ParentChainHeight,
      };
    }
  }

  #endregion
  /// <summary>
  /// Actions
  /// </summary>
  internal static partial class TokenContractContainer
  {
    static readonly string __ServiceName = "token.TokenContract";

    #region Marshallers
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.CreateInput> __Marshaller_token_CreateInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.CreateInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.IssueInput> __Marshaller_token_IssueInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.IssueInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.TransferInput> __Marshaller_token_TransferInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.TransferInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.TransferFromInput> __Marshaller_token_TransferFromInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.TransferFromInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.ApproveInput> __Marshaller_token_ApproveInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.ApproveInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.UnApproveInput> __Marshaller_token_UnApproveInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.UnApproveInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.LockInput> __Marshaller_token_LockInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.LockInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.UnlockInput> __Marshaller_token_UnlockInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.UnlockInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.BurnInput> __Marshaller_token_BurnInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.BurnInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.ChangeTokenIssuerInput> __Marshaller_token_ChangeTokenIssuerInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.ChangeTokenIssuerInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.SetPrimaryTokenSymbolInput> __Marshaller_token_SetPrimaryTokenSymbolInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.SetPrimaryTokenSymbolInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.CrossChainTransferInput> __Marshaller_token_CrossChainTransferInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.CrossChainTransferInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.CrossChainReceiveTokenInput> __Marshaller_token_CrossChainReceiveTokenInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.CrossChainReceiveTokenInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.CrossChainCreateTokenInput> __Marshaller_token_CrossChainCreateTokenInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.CrossChainCreateTokenInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.InitializeFromParentChainInput> __Marshaller_token_InitializeFromParentChainInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.InitializeFromParentChainInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.TotalTransactionFeesMap> __Marshaller_token_TotalTransactionFeesMap = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.TotalTransactionFeesMap.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.ChargeTransactionFeesInput> __Marshaller_token_ChargeTransactionFeesInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.ChargeTransactionFeesInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.ChargeTransactionFeesOutput> __Marshaller_token_ChargeTransactionFeesOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.ChargeTransactionFeesOutput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.CheckThresholdInput> __Marshaller_token_CheckThresholdInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.CheckThresholdInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.TotalResourceTokensMaps> __Marshaller_token_TotalResourceTokensMaps = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.TotalResourceTokensMaps.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.ChargeResourceTokenInput> __Marshaller_token_ChargeResourceTokenInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.ChargeResourceTokenInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.SymbolListToPayTxSizeFee> __Marshaller_token_SymbolListToPayTxSizeFee = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.SymbolListToPayTxSizeFee.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.UpdateCoefficientsInput> __Marshaller_token_UpdateCoefficientsInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.UpdateCoefficientsInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.GetTokenInfoInput> __Marshaller_token_GetTokenInfoInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.GetTokenInfoInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.TokenInfo> __Marshaller_token_TokenInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.TokenInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.TokenInfoList> __Marshaller_token_TokenInfoList = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.TokenInfoList.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.GetBalanceInput> __Marshaller_token_GetBalanceInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.GetBalanceInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.GetBalanceOutput> __Marshaller_token_GetBalanceOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.GetBalanceOutput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.GetAllowanceInput> __Marshaller_token_GetAllowanceInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.GetAllowanceInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.GetAllowanceOutput> __Marshaller_token_GetAllowanceOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.GetAllowanceOutput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.IsInWhiteListInput> __Marshaller_token_IsInWhiteListInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.IsInWhiteListInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.BoolValue> __Marshaller_google_protobuf_BoolValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.BoolValue.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.GetLockedAmountInput> __Marshaller_token_GetLockedAmountInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.GetLockedAmountInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.GetLockedAmountOutput> __Marshaller_token_GetLockedAmountOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.GetLockedAmountOutput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.GetCrossChainTransferTokenContractAddressInput> __Marshaller_token_GetCrossChainTransferTokenContractAddressInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.GetCrossChainTransferTokenContractAddressInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Address> __Marshaller_aelf_Address = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Address.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.StringValue> __Marshaller_google_protobuf_StringValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.StringValue.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Int32Value> __Marshaller_google_protobuf_Int32Value = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Int32Value.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.CalculateFeeCoefficients> __Marshaller_token_CalculateFeeCoefficients = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.CalculateFeeCoefficients.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Hash> __Marshaller_aelf_Hash = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Hash.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::AElf.Contracts.MultiToken.CreateInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Create = new aelf::Method<global::AElf.Contracts.MultiToken.CreateInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Create",
        __Marshaller_token_CreateInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.IssueInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Issue = new aelf::Method<global::AElf.Contracts.MultiToken.IssueInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Issue",
        __Marshaller_token_IssueInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.TransferInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Transfer = new aelf::Method<global::AElf.Contracts.MultiToken.TransferInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Transfer",
        __Marshaller_token_TransferInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.TransferFromInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_TransferFrom = new aelf::Method<global::AElf.Contracts.MultiToken.TransferFromInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "TransferFrom",
        __Marshaller_token_TransferFromInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.ApproveInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Approve = new aelf::Method<global::AElf.Contracts.MultiToken.ApproveInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Approve",
        __Marshaller_token_ApproveInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.UnApproveInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UnApprove = new aelf::Method<global::AElf.Contracts.MultiToken.UnApproveInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "UnApprove",
        __Marshaller_token_UnApproveInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.LockInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Lock = new aelf::Method<global::AElf.Contracts.MultiToken.LockInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Lock",
        __Marshaller_token_LockInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.UnlockInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Unlock = new aelf::Method<global::AElf.Contracts.MultiToken.UnlockInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Unlock",
        __Marshaller_token_UnlockInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.BurnInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Burn = new aelf::Method<global::AElf.Contracts.MultiToken.BurnInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Burn",
        __Marshaller_token_BurnInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.ChangeTokenIssuerInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeTokenIssuer = new aelf::Method<global::AElf.Contracts.MultiToken.ChangeTokenIssuerInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeTokenIssuer",
        __Marshaller_token_ChangeTokenIssuerInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.SetPrimaryTokenSymbolInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetPrimaryTokenSymbol = new aelf::Method<global::AElf.Contracts.MultiToken.SetPrimaryTokenSymbolInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetPrimaryTokenSymbol",
        __Marshaller_token_SetPrimaryTokenSymbolInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.CrossChainTransferInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CrossChainTransfer = new aelf::Method<global::AElf.Contracts.MultiToken.CrossChainTransferInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "CrossChainTransfer",
        __Marshaller_token_CrossChainTransferInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.CrossChainReceiveTokenInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CrossChainReceiveToken = new aelf::Method<global::AElf.Contracts.MultiToken.CrossChainReceiveTokenInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "CrossChainReceiveToken",
        __Marshaller_token_CrossChainReceiveTokenInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.CrossChainCreateTokenInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CrossChainCreateToken = new aelf::Method<global::AElf.Contracts.MultiToken.CrossChainCreateTokenInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "CrossChainCreateToken",
        __Marshaller_token_CrossChainCreateTokenInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.InitializeFromParentChainInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_InitializeFromParentChain = new aelf::Method<global::AElf.Contracts.MultiToken.InitializeFromParentChainInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "InitializeFromParentChain",
        __Marshaller_token_InitializeFromParentChainInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.TotalTransactionFeesMap, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ClaimTransactionFees = new aelf::Method<global::AElf.Contracts.MultiToken.TotalTransactionFeesMap, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ClaimTransactionFees",
        __Marshaller_token_TotalTransactionFeesMap,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.ChargeTransactionFeesInput, global::AElf.Contracts.MultiToken.ChargeTransactionFeesOutput> __Method_ChargeTransactionFees = new aelf::Method<global::AElf.Contracts.MultiToken.ChargeTransactionFeesInput, global::AElf.Contracts.MultiToken.ChargeTransactionFeesOutput>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChargeTransactionFees",
        __Marshaller_token_ChargeTransactionFeesInput,
        __Marshaller_token_ChargeTransactionFeesOutput);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.CheckThresholdInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CheckThreshold = new aelf::Method<global::AElf.Contracts.MultiToken.CheckThresholdInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "CheckThreshold",
        __Marshaller_token_CheckThresholdInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty> __Method_InitialCoefficients = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "InitialCoefficients",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.TotalResourceTokensMaps, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DonateResourceToken = new aelf::Method<global::AElf.Contracts.MultiToken.TotalResourceTokensMaps, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "DonateResourceToken",
        __Marshaller_token_TotalResourceTokensMaps,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.ChargeResourceTokenInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChargeResourceToken = new aelf::Method<global::AElf.Contracts.MultiToken.ChargeResourceTokenInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChargeResourceToken",
        __Marshaller_token_ChargeResourceTokenInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CheckResourceToken = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "CheckResourceToken",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.SymbolListToPayTxSizeFee, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetSymbolsToPayTxSizeFee = new aelf::Method<global::AElf.Contracts.MultiToken.SymbolListToPayTxSizeFee, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetSymbolsToPayTxSizeFee",
        __Marshaller_token_SymbolListToPayTxSizeFee,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.UpdateCoefficientsInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateCoefficientsForSender = new aelf::Method<global::AElf.Contracts.MultiToken.UpdateCoefficientsInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "UpdateCoefficientsForSender",
        __Marshaller_token_UpdateCoefficientsInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.UpdateCoefficientsInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateCoefficientsForContract = new aelf::Method<global::AElf.Contracts.MultiToken.UpdateCoefficientsInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "UpdateCoefficientsForContract",
        __Marshaller_token_UpdateCoefficientsInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty> __Method_InitializeAuthorizedController = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "InitializeAuthorizedController",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.GetTokenInfoInput, global::AElf.Contracts.MultiToken.TokenInfo> __Method_GetTokenInfo = new aelf::Method<global::AElf.Contracts.MultiToken.GetTokenInfoInput, global::AElf.Contracts.MultiToken.TokenInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetTokenInfo",
        __Marshaller_token_GetTokenInfoInput,
        __Marshaller_token_TokenInfo);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.TokenInfo> __Method_GetNativeTokenInfo = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.TokenInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetNativeTokenInfo",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_token_TokenInfo);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.TokenInfoList> __Method_GetResourceTokenInfo = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.TokenInfoList>(
        aelf::MethodType.View,
        __ServiceName,
        "GetResourceTokenInfo",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_token_TokenInfoList);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.GetBalanceInput, global::AElf.Contracts.MultiToken.GetBalanceOutput> __Method_GetBalance = new aelf::Method<global::AElf.Contracts.MultiToken.GetBalanceInput, global::AElf.Contracts.MultiToken.GetBalanceOutput>(
        aelf::MethodType.View,
        __ServiceName,
        "GetBalance",
        __Marshaller_token_GetBalanceInput,
        __Marshaller_token_GetBalanceOutput);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.GetAllowanceInput, global::AElf.Contracts.MultiToken.GetAllowanceOutput> __Method_GetAllowance = new aelf::Method<global::AElf.Contracts.MultiToken.GetAllowanceInput, global::AElf.Contracts.MultiToken.GetAllowanceOutput>(
        aelf::MethodType.View,
        __ServiceName,
        "GetAllowance",
        __Marshaller_token_GetAllowanceInput,
        __Marshaller_token_GetAllowanceOutput);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.IsInWhiteListInput, global::Google.Protobuf.WellKnownTypes.BoolValue> __Method_IsInWhiteList = new aelf::Method<global::AElf.Contracts.MultiToken.IsInWhiteListInput, global::Google.Protobuf.WellKnownTypes.BoolValue>(
        aelf::MethodType.View,
        __ServiceName,
        "IsInWhiteList",
        __Marshaller_token_IsInWhiteListInput,
        __Marshaller_google_protobuf_BoolValue);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.GetLockedAmountInput, global::AElf.Contracts.MultiToken.GetLockedAmountOutput> __Method_GetLockedAmount = new aelf::Method<global::AElf.Contracts.MultiToken.GetLockedAmountInput, global::AElf.Contracts.MultiToken.GetLockedAmountOutput>(
        aelf::MethodType.View,
        __ServiceName,
        "GetLockedAmount",
        __Marshaller_token_GetLockedAmountInput,
        __Marshaller_token_GetLockedAmountOutput);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.GetCrossChainTransferTokenContractAddressInput, global::AElf.Types.Address> __Method_GetCrossChainTransferTokenContractAddress = new aelf::Method<global::AElf.Contracts.MultiToken.GetCrossChainTransferTokenContractAddressInput, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetCrossChainTransferTokenContractAddress",
        __Marshaller_token_GetCrossChainTransferTokenContractAddressInput,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.StringValue> __Method_GetPrimaryTokenSymbol = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.StringValue>(
        aelf::MethodType.View,
        __ServiceName,
        "GetPrimaryTokenSymbol",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_StringValue);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Int32Value, global::AElf.Contracts.MultiToken.CalculateFeeCoefficients> __Method_GetCalculateFeeCoefficientsForContract = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Int32Value, global::AElf.Contracts.MultiToken.CalculateFeeCoefficients>(
        aelf::MethodType.View,
        __ServiceName,
        "GetCalculateFeeCoefficientsForContract",
        __Marshaller_google_protobuf_Int32Value,
        __Marshaller_token_CalculateFeeCoefficients);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.CalculateFeeCoefficients> __Method_GetCalculateFeeCoefficientsForSender = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.CalculateFeeCoefficients>(
        aelf::MethodType.View,
        __ServiceName,
        "GetCalculateFeeCoefficientsForSender",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_token_CalculateFeeCoefficients);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.SymbolListToPayTxSizeFee> __Method_GetSymbolsToPayTxSizeFee = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.SymbolListToPayTxSizeFee>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSymbolsToPayTxSizeFee",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_token_SymbolListToPayTxSizeFee);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Hash> __Method_GetLatestTotalTransactionFeesMapHash = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Hash>(
        aelf::MethodType.View,
        __ServiceName,
        "GetLatestTotalTransactionFeesMapHash",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Hash);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Hash> __Method_GetLatestTotalResourceTokensMapsHash = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Hash>(
        aelf::MethodType.View,
        __ServiceName,
        "GetLatestTotalResourceTokensMapsHash",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Hash);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.BoolValue> __Method_IsTokenAvailableForMethodFee = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.BoolValue>(
        aelf::MethodType.View,
        __ServiceName,
        "IsTokenAvailableForMethodFee",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_google_protobuf_BoolValue);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AElf.Contracts.MultiToken.TokenContractReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Contracts.MultiToken.TokenContractReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    public class TokenContractStub : aelf::ContractStubBase
    {
      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.CreateInput, global::Google.Protobuf.WellKnownTypes.Empty> Create
      {
        get { return __factory.Create(__Method_Create); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.IssueInput, global::Google.Protobuf.WellKnownTypes.Empty> Issue
      {
        get { return __factory.Create(__Method_Issue); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.TransferInput, global::Google.Protobuf.WellKnownTypes.Empty> Transfer
      {
        get { return __factory.Create(__Method_Transfer); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.TransferFromInput, global::Google.Protobuf.WellKnownTypes.Empty> TransferFrom
      {
        get { return __factory.Create(__Method_TransferFrom); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.ApproveInput, global::Google.Protobuf.WellKnownTypes.Empty> Approve
      {
        get { return __factory.Create(__Method_Approve); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.UnApproveInput, global::Google.Protobuf.WellKnownTypes.Empty> UnApprove
      {
        get { return __factory.Create(__Method_UnApprove); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.LockInput, global::Google.Protobuf.WellKnownTypes.Empty> Lock
      {
        get { return __factory.Create(__Method_Lock); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.UnlockInput, global::Google.Protobuf.WellKnownTypes.Empty> Unlock
      {
        get { return __factory.Create(__Method_Unlock); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.BurnInput, global::Google.Protobuf.WellKnownTypes.Empty> Burn
      {
        get { return __factory.Create(__Method_Burn); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.ChangeTokenIssuerInput, global::Google.Protobuf.WellKnownTypes.Empty> ChangeTokenIssuer
      {
        get { return __factory.Create(__Method_ChangeTokenIssuer); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.SetPrimaryTokenSymbolInput, global::Google.Protobuf.WellKnownTypes.Empty> SetPrimaryTokenSymbol
      {
        get { return __factory.Create(__Method_SetPrimaryTokenSymbol); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.CrossChainTransferInput, global::Google.Protobuf.WellKnownTypes.Empty> CrossChainTransfer
      {
        get { return __factory.Create(__Method_CrossChainTransfer); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.CrossChainReceiveTokenInput, global::Google.Protobuf.WellKnownTypes.Empty> CrossChainReceiveToken
      {
        get { return __factory.Create(__Method_CrossChainReceiveToken); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.CrossChainCreateTokenInput, global::Google.Protobuf.WellKnownTypes.Empty> CrossChainCreateToken
      {
        get { return __factory.Create(__Method_CrossChainCreateToken); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.InitializeFromParentChainInput, global::Google.Protobuf.WellKnownTypes.Empty> InitializeFromParentChain
      {
        get { return __factory.Create(__Method_InitializeFromParentChain); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.TotalTransactionFeesMap, global::Google.Protobuf.WellKnownTypes.Empty> ClaimTransactionFees
      {
        get { return __factory.Create(__Method_ClaimTransactionFees); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.ChargeTransactionFeesInput, global::AElf.Contracts.MultiToken.ChargeTransactionFeesOutput> ChargeTransactionFees
      {
        get { return __factory.Create(__Method_ChargeTransactionFees); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.CheckThresholdInput, global::Google.Protobuf.WellKnownTypes.Empty> CheckThreshold
      {
        get { return __factory.Create(__Method_CheckThreshold); }
      }

      public aelf::IMethodStub<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty> InitialCoefficients
      {
        get { return __factory.Create(__Method_InitialCoefficients); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.TotalResourceTokensMaps, global::Google.Protobuf.WellKnownTypes.Empty> DonateResourceToken
      {
        get { return __factory.Create(__Method_DonateResourceToken); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.ChargeResourceTokenInput, global::Google.Protobuf.WellKnownTypes.Empty> ChargeResourceToken
      {
        get { return __factory.Create(__Method_ChargeResourceToken); }
      }

      public aelf::IMethodStub<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty> CheckResourceToken
      {
        get { return __factory.Create(__Method_CheckResourceToken); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.SymbolListToPayTxSizeFee, global::Google.Protobuf.WellKnownTypes.Empty> SetSymbolsToPayTxSizeFee
      {
        get { return __factory.Create(__Method_SetSymbolsToPayTxSizeFee); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.UpdateCoefficientsInput, global::Google.Protobuf.WellKnownTypes.Empty> UpdateCoefficientsForSender
      {
        get { return __factory.Create(__Method_UpdateCoefficientsForSender); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.UpdateCoefficientsInput, global::Google.Protobuf.WellKnownTypes.Empty> UpdateCoefficientsForContract
      {
        get { return __factory.Create(__Method_UpdateCoefficientsForContract); }
      }

      public aelf::IMethodStub<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty> InitializeAuthorizedController
      {
        get { return __factory.Create(__Method_InitializeAuthorizedController); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.GetTokenInfoInput, global::AElf.Contracts.MultiToken.TokenInfo> GetTokenInfo
      {
        get { return __factory.Create(__Method_GetTokenInfo); }
      }

      public aelf::IMethodStub<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.TokenInfo> GetNativeTokenInfo
      {
        get { return __factory.Create(__Method_GetNativeTokenInfo); }
      }

      public aelf::IMethodStub<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.TokenInfoList> GetResourceTokenInfo
      {
        get { return __factory.Create(__Method_GetResourceTokenInfo); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.GetBalanceInput, global::AElf.Contracts.MultiToken.GetBalanceOutput> GetBalance
      {
        get { return __factory.Create(__Method_GetBalance); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.GetAllowanceInput, global::AElf.Contracts.MultiToken.GetAllowanceOutput> GetAllowance
      {
        get { return __factory.Create(__Method_GetAllowance); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.IsInWhiteListInput, global::Google.Protobuf.WellKnownTypes.BoolValue> IsInWhiteList
      {
        get { return __factory.Create(__Method_IsInWhiteList); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.GetLockedAmountInput, global::AElf.Contracts.MultiToken.GetLockedAmountOutput> GetLockedAmount
      {
        get { return __factory.Create(__Method_GetLockedAmount); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.MultiToken.GetCrossChainTransferTokenContractAddressInput, global::AElf.Types.Address> GetCrossChainTransferTokenContractAddress
      {
        get { return __factory.Create(__Method_GetCrossChainTransferTokenContractAddress); }
      }

      public aelf::IMethodStub<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.StringValue> GetPrimaryTokenSymbol
      {
        get { return __factory.Create(__Method_GetPrimaryTokenSymbol); }
      }

      public aelf::IMethodStub<global::Google.Protobuf.WellKnownTypes.Int32Value, global::AElf.Contracts.MultiToken.CalculateFeeCoefficients> GetCalculateFeeCoefficientsForContract
      {
        get { return __factory.Create(__Method_GetCalculateFeeCoefficientsForContract); }
      }

      public aelf::IMethodStub<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.CalculateFeeCoefficients> GetCalculateFeeCoefficientsForSender
      {
        get { return __factory.Create(__Method_GetCalculateFeeCoefficientsForSender); }
      }

      public aelf::IMethodStub<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.SymbolListToPayTxSizeFee> GetSymbolsToPayTxSizeFee
      {
        get { return __factory.Create(__Method_GetSymbolsToPayTxSizeFee); }
      }

      public aelf::IMethodStub<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Hash> GetLatestTotalTransactionFeesMapHash
      {
        get { return __factory.Create(__Method_GetLatestTotalTransactionFeesMapHash); }
      }

      public aelf::IMethodStub<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Hash> GetLatestTotalResourceTokensMapsHash
      {
        get { return __factory.Create(__Method_GetLatestTotalResourceTokensMapsHash); }
      }

      public aelf::IMethodStub<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.BoolValue> IsTokenAvailableForMethodFee
      {
        get { return __factory.Create(__Method_IsTokenAvailableForMethodFee); }
      }

    }
  }
}
#endregion

